{"version":3,"sourceRoot":"../","sources":["./dist/sutras.mantra.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SUTRAS = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = blackHoleSutra;\n// blackhole.js - Marak Squires 2023\nfunction blackHoleSutra(game, context) {\n  var rules = game.createSutra();\n\n  // Remark: Note namspace of sutraname::methodname\n  //         Mantra runs a single Sutra tree which all entities are bound to\n  //         This requires a unique namespace for each Sutra\n  rules.on('blackhole::create', function () {\n    var entityData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    // Create the Black Hole entity\n    var blackHole = game.createEntity({\n      type: 'BLACK_HOLE',\n      texture: 'fire',\n      isStatic: true,\n      isSensor: true,\n      width: 4,\n      height: 4,\n      //radius: 20,\n      position: {\n        x: entityData.position.x,\n        y: entityData.position.y\n      },\n      mass: 100\n    });\n  });\n\n  // Define the gravitational constant\n  var GRAVITATIONAL_CONSTANT = 0.01; // Adjust as needed for gameplay\n\n  rules.addCondition('gravityTick', function (entity, gameState) {\n    return gameState.tick % 5 === 0;\n  });\n  rules[\"if\"]('gravityTick').then('applyGravity');\n  rules.on('applyGravity', function (entityData, node, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      // must get updated position of context\n      var updatedContext = gameState.ents._[context.id];\n      Object.keys(gameState.ents._).forEach(function (eId) {\n        var entity = gameState.ents._[eId];\n        if (entity.type !== 'BLACK_HOLE') {\n          applyGravity(updatedContext, entity, GRAVITATIONAL_CONSTANT, gameState);\n        }\n      });\n      return;\n    }\n    if (gameState.ents.BLACK_HOLE) {\n      gameState.ents.BLACK_HOLE.forEach(function (blackHole) {\n        Object.keys(gameState.ents._).forEach(function (eId) {\n          var entity = gameState.ents._[eId];\n          if (entity.type !== 'BLACK_HOLE') {\n            applyGravity(blackHole, entity, GRAVITATIONAL_CONSTANT, gameState);\n          }\n        });\n      });\n    }\n  });\n  rules[\"if\"]('entTouchedBlackhole').then('blackHoleCollision');\n  rules.addCondition('entTouchedBlackhole', function (entity, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity[context.type];\n    } else {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity.BLACK_HOLE;\n    }\n  });\n  rules.on('blackHoleCollision', function (collision, node, gameState) {\n    var pendingDestroy = collision.bodyA;\n    var blackHole = collision.bodyB;\n    if (collision.bodyA.type === 'BLACK_HOLE') {\n      pendingDestroy = collision.bodyB;\n      blackHole = collision.bodyA;\n    }\n    if (typeof context !== 'undefined') {\n      if (collision.bodyA.type === context.type) {\n        pendingDestroy = collision.bodyB;\n      } else {\n        pendingDestroy = collision.bodyA;\n      }\n      blackHole = context;\n    }\n    if (pendingDestroy && blackHole) {\n      // here we have pendingDestroy.position, pendingDestroy.velocity, and blackHole.position\n      // game.playSpatialSound(pendingDestroy, blackHole);\n      // increase size of black hole\n      // console.log(blackHole.height, blackHole.width)\n      /*\n      game.updateEntity({\n        id: blackHole.id,\n        height: blackHole.height + 0.1,\n        width: blackHole.width + 0.1,\n        // radius: blackHole.radius + 0.1,\n      });\n      */\n    }\n    game.removeEntity(pendingDestroy.id);\n  });\n\n  // Function to apply gravitational force\n  function applyGravity(ent1, ent2, gravity, gameState) {\n    if (!ent1 || !ent2) {\n      return;\n    }\n    var distance = Vector.sub(ent2.position, ent1.position);\n    var magnitude = Vector.magnitude(distance);\n    if (magnitude < 0.5) {\n      // This prevents extreme forces at very close distances\n      return;\n    }\n    distance = Vector.normalize(distance);\n    var force = gravity * ent1.mass * ent2.mass / (magnitude * magnitude);\n    var maxForce = 1; // Prevents excessively large forces\n    force = Math.min(force, maxForce);\n\n    // Apply the force towards the black hole\n    // TODO: add config flag for repulsion in addition to attraction\n    var repulsion = false;\n    if (typeof gameState.repulsion !== 'undefined') {\n      repulsion = gameState.repulsion;\n    }\n    var sign = repulsion ? 1 : -1;\n    game.applyForce(ent2.id, {\n      x: sign * distance.x * force,\n      y: sign * distance.y * force\n    });\n  }\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = bomb;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n// bomb.js - Marak Squires 2024\nfunction bomb(game) {\n  var rules = game.createSutra();\n\n  // Rate at which the player can drop bombs\n  var fireRate = 1000;\n  // Distance in front of the player where the bomb should start\n  var distanceInFront = 16;\n  // Speed at which the bomb is thrown\n  var speed = 0.05;\n  // TODO: ^^^ make these config\n\n  rules.addCondition('canDropBomb', function (entity, gameState) {\n    // TODO: better fluent integration of Action Rate Limiter into Sutra\n    var actionRateLimiterComponent = game.components.actionRateLimiter;\n    var lastFired = actionRateLimiterComponent.getLastActionTime(entity.id, 'dropBomb');\n    var currentTime = Date.now();\n    return currentTime - lastFired >= fireRate;\n  });\n\n  // Define actions\n  rules.addAction({\n    \"if\": 'canDropBomb',\n    then: 'dropBomb'\n  });\n\n  // Event listeners for actions\n  rules.on('dropBomb', function (entity, node, gameState) {\n    var playerPos = entity.position;\n    var playerRotation = entity.rotation; // in radians\n\n    if (!playerPos) {\n      // client might not have the position or rotation component, don't client-side predict\n      console.log('no player data available');\n      return;\n    }\n\n    // TODO: better fluent integration of Action Rate Limiter into Sutra\n    var actionRateLimiterComponent = game.components.actionRateLimiter;\n    actionRateLimiterComponent.recordAction(entity.id, 'dropBomb');\n    if (typeof entity.radius !== 'undefined') {\n      entity.width = entity.radius * 2;\n      entity.height = entity.radius * 2;\n    }\n    var playerOffsetX = entity.width / 2; // Adjust this value to align the bomb properly\n    var playerOffsetY = entity.height / 2; // Adjust this value to align the bomb properly\n\n    playerOffsetX = 0;\n    playerOffsetY = 0;\n    if (typeof playerRotation === 'undefined') {\n      playerRotation = 0; // this should have a default\n    }\n\n    // convert to 3d if rotation object\n    if (_typeof(playerRotation) === 'object') {\n      playerRotation = playerRotation.z;\n    }\n\n    // Compute the bomb's direction based on player's rotation\n    var directionX = Math.sin(playerRotation);\n    var directionY = -Math.cos(playerRotation);\n\n    // Place the bomb in front of the player\n    var bombStartPosition = {\n      x: playerPos.x + playerOffsetX + distanceInFront * Math.sin(playerRotation),\n      y: playerPos.y + playerOffsetY + distanceInFront * -Math.cos(playerRotation)\n      //z: 10\n    };\n    var bombDirectionConfig = {\n      type: 'BOMB',\n      mass: 10000,\n      collisionStart: true,\n      position: bombStartPosition,\n      lifetime: 2000,\n      friction: 0.5,\n      frictionStatic: 0.5,\n      frictionAir: 0.01,\n      texture: {\n        sheet: 'loz_spritesheet',\n        sprite: 'bomb',\n        playing: false\n      },\n      owner: entity.id,\n      rotation: 0,\n      velocity: {\n        x: directionX * speed,\n        y: directionY * speed\n      },\n      height: 16,\n      width: 16,\n      damage: 10 // TODO: make this a config\n    };\n    // console.log('using bombDirectionConfig', bombDirectionConfig)\n    game.createEntity(bombDirectionConfig);\n  });\n\n  // Handling collisions\n  rules[\"if\"]('entTouchedBomb').then('bombCollision');\n  rules.addCondition('entTouchedBomb', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'BOMB') {\n        return true;\n      }\n      if (entity.bodyB.type === 'BOMB') {\n        return true;\n      }\n    }\n  });\n  rules.on('bombCollision', function (collision, node, gameState) {\n    var bombEntity = collision.bodyA.type === 'BOMB' ? collision.bodyA : collision.bodyB;\n    var otherEntity = collision.bodyA.type === 'BOMB' ? collision.bodyB : collision.bodyA;\n\n    // TODO: check the ctime of bomb to now, do not explode if too new\n    // TODO: Apply damage or other effects to otherEntity\n    // TODO: configurable collision groups\n    if (['DEMON', 'HEXAPOD', 'FIRE', 'NPC', 'BLOCK', 'DOOR'].indexOf(otherEntity.type) !== -1) {\n      // TODO: remove this to work with generic collision handler for Block types\n      //       no need for explict call here, is simple refactor\n      if (otherEntity.type === 'BLOCK' || otherEntity.type === 'HEXAPOD') {\n        game.systems.block.blockBulletCollision(otherEntity.id, bombEntity.id, otherEntity, bombEntity);\n      } else {\n        game.removeEntity(otherEntity.id);\n        game.removeEntity(bombEntity.id);\n      }\n    }\n  });\n  return rules;\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar SUTRAS = require('./index.js');\nconsole.log('SUTRAS', SUTRAS);\nmodule.exports = SUTRAS[\"default\"];\n\n},{\"./index.js\":9}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = demon;\nfunction demon(game) {\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 8,\n    position: {\n      x: -60,\n      y: -60,\n      z: 8\n    }\n  });\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 8,\n    position: {\n      x: 64,\n      y: -60,\n      z: 8\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedDemon', function (entity, gameState) {\n    console.log('entityTouchedDemon check', entity);\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (typeof entity.DEMON !== 'undefined') {\n        return true;\n      }\n    }\n  });\n\n  /*\n  rules.on('entityTouchedDemon', function (collision) {\n    //let demonEntity = collision.bodyA.type === 'DEMON' ? collision.bodyA : collision.bodyB;\n    // Define the scale factor for how much bigger the demon should get\n    const scaleFactor = 2.1; // For example, 10% bigger\n    // Increase the size of the demon\n    game.updateEntity({\n      id: demonEntity.id,\n      width: demonEntity.width * scaleFactor,\n      height: demonEntity.height * scaleFactor,\n      depth: demonEntity.depth * scaleFactor\n    });\n  });\n  */\n\n  return rules;\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fire;\nfunction fire(game) {\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: -80,\n      y: -60,\n      z: 16\n    }\n  });\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: 80,\n      y: -60,\n      z: 16\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedFire', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'FIRE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'FIRE') {\n        return true;\n      }\n    }\n  });\n  rules[\"if\"]('entityTouchedFire').then('playNote', {\n    note: 'F#4'\n  }).then('damageEntity');\n  rules.on('damageEntity', function (collision) {\n    var ent;\n    if (collision.bodyA.type === 'FIRE') {\n      ent = collision.bodyB;\n    } else {\n      ent = collision.bodyA;\n    }\n    // create a copy of the entity previous texture\n    // TODO: remove the createDefaultPlayer() call here\n    //       and instead have a game.on('player::death') event\n    //       listening in parent Sutra\n    var texture = ent.texture;\n    game.removeEntity(ent.id);\n    if (ent.type === 'PLAYER') {\n      game.currentPlayerId = null;\n      game.createDefaultPlayer({\n        texture: texture\n      });\n    }\n  });\n\n  // TODO: move pointerDown event into Sutra\n  game.on('pointerDown', function (entity, ev) {\n    if (entity.type === 'FIRE') {\n      game.playNote('G4');\n    }\n  });\n  return rules;\n}\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fountSutra;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// fount.js - Marak Squires 2023\n// Sutra for Generating Units\nfunction fountSutra(game, context) {\n  var sprayConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var rules = game.createSutra();\n\n  // Default configuration for the Fount\n  var settings = _objectSpread({\n    unitType: 'PARTICLE',\n    // Type of unit to generate\n    collisionActive: false,\n    // Whether or not the unit will emit collisionActive actives ( performance hit )\n    texture: 'pixel',\n    // Texture for the unit\n    color: 0x00ff00,\n    // Color of the unit\n    unitSize: {\n      width: 4,\n      height: 4\n    },\n    // Size of the unit\n    sprayAngle: Math.PI / 8,\n    // Angle of the spray arc (in radians)\n    sprayWidth: Math.PI / 4,\n    // Width of the spray arc (in radians)\n    forceMagnitude: 0.5\n  }, sprayConfig);\n\n  // Function to create a unit\n  function createUnit(position) {\n    var rgbColor = settings.color;\n    // convert from int to rgb\n    rgbColor = [rgbColor >> 16 & 255, rgbColor >> 8 & 255, rgbColor & 255];\n    var rgbColorString = \"rgba(\".concat(rgbColor.join(','), \", 0.5)\"); // Adjust opacity as needed\n    return game.createEntity({\n      type: settings.unitType,\n      collisionActive: false,\n      collisionEnd: false,\n      collisionStart: false,\n      // texture: settings.texture,\n      height: settings.unitSize.height,\n      color: settings.color,\n      width: settings.unitSize.width,\n      position: position,\n      friction: 0.05,\n      frictionAir: 0.005,\n      frictionStatic: 0.25,\n      style: {\n        backgroundColor: rgbColorString\n      },\n      isSensor: true\n    });\n  }\n  function applySprayForce(unit) {\n    var baseAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : settings.sprayAngle;\n    var angleOffset = (Math.random() - 0.5) * settings.sprayWidth; // Random offset within a specified width\n    var angle = baseAngle + angleOffset;\n    var force = {\n      x: settings.forceMagnitude * Math.cos(angle),\n      y: settings.forceMagnitude * Math.sin(angle)\n    };\n    game.applyForce(unit.id, force);\n  }\n\n  // Rule for generating and spraying units\n  rules[\"if\"]('fountTick').then('fountSpray');\n  rules.addCondition('fountTick', function (entity, gameState) {\n    return entity.name === context.name && gameState.tick % 10 === 0;\n  });\n  rules.on('fountSpray', function (context, node, gameState) {\n    // Determine the position of the fount (can be context-dependent)\n    var fountPosition = typeof context !== 'undefined' ? context.position : {\n      x: 0,\n      y: 0\n    };\n    // Create a unit and apply force\n    var unit = createUnit(fountPosition);\n    applySprayForce(unit);\n  });\n  return rules;\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = gameOfLife;\nfunction gameOfLife(game) {\n  var GRID_SIZE = 150; // Define the size of the grid\n  var CELL_SIZE = 5; // Size of each cell\n\n  // Initialize grid cells\n  for (var x = 0; x < GRID_SIZE; x += CELL_SIZE) {\n    for (var y = 0; y < GRID_SIZE; y += CELL_SIZE) {\n      game.createEntity({\n        type: 'LIFE_CELL',\n        //health: Math.random() < 0.5 ? 1 : 2, // 1 is alive, 2 is dead\n        health: 2,\n        position: {\n          x: x,\n          y: y\n        },\n        body: false,\n        width: CELL_SIZE,\n        height: CELL_SIZE\n      });\n    }\n  }\n  function initializeGlider(x, y, cellSize, game) {\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y - cellSize\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y - 2 * cellSize\n      }\n    });\n  }\n  initializeGlider(100, 100, CELL_SIZE, game);\n  var rules = game.createSutra();\n\n  // Rule for updating cell state\n  rules[\"if\"]('updateCellState').then('transitionCellState');\n  rules.addCondition('updateCellState', function (entity, gameState) {\n    return entity.type === 'LIFE_CELL' && gameState.tick % 10 === 0; // Update every 2 ticks\n  });\n  rules.on('transitionCellState', function (entity, node, gameState) {\n    var neighbors = getNeighbors(entity, node, gameState); // Function to get neighboring cells\n    var aliveNeighbors = neighbors.filter(function (neighbor) {\n      return neighbor.health === 1;\n    }).length;\n\n    // console.log(neighbors, aliveNeighbors)\n    // Game of Life rules\n    if (entity.health === 1 && (aliveNeighbors < 2 || aliveNeighbors > 3)) {\n      //entity.state = 'dead';\n      entity.health = 0;\n    } else if (entity.health === 2 && aliveNeighbors === 3) {\n      entity.health = 1;\n      //entity.state = 'alive';\n    }\n\n    // Update entity in the game\n    game.updateEntity({\n      id: entity.id,\n      health: entity.health,\n      style: {\n        backgroundColor: entity.health === 1 ? 'green' : 'black'\n      }\n    });\n  });\n  return rules;\n}\nfunction getNeighbors(cell, node, gameState) {\n  var gridSize = 150; // Define the size of the grid\n  var cellSize = 5; // Assuming each cell has a fixed size\n\n  var neighbors = [];\n  var neighborOffsets = [{\n    x: -cellSize,\n    y: -cellSize\n  }, {\n    x: 0,\n    y: -cellSize\n  }, {\n    x: cellSize,\n    y: -cellSize\n  }, {\n    x: -cellSize,\n    y: 0\n  }, /* Current Cell */{\n    x: cellSize,\n    y: 0\n  }, {\n    x: -cellSize,\n    y: cellSize\n  }, {\n    x: 0,\n    y: cellSize\n  }, {\n    x: cellSize,\n    y: cellSize\n  }];\n  gameState.ents.LIFE_CELL.forEach(function (otherCell) {\n    for (var _i = 0, _neighborOffsets = neighborOffsets; _i < _neighborOffsets.length; _i++) {\n      var offset = _neighborOffsets[_i];\n      var wrappedX = (cell.position.x + offset.x + gridSize) % gridSize;\n      var wrappedY = (cell.position.y + offset.y + gridSize) % gridSize;\n      if (otherCell.position.x === wrappedX && otherCell.position.y === wrappedY) {\n        neighbors.push(otherCell);\n        break; // Found neighbor, no need to check other offsets\n      }\n    }\n  });\n  return neighbors;\n}\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexapod;\n// hexapod.js - Marak Squires 2023\nfunction hexapod(game) {\n  // create 22 hexapods\n  // start at 0,0 and make them in a circle with radius 80\n  var numberOfHexapods = 22;\n  var radius = 80;\n  for (var i = 0; i < numberOfHexapods; i++) {\n    // Calculate the angle for each hexapod\n    var angle = i / numberOfHexapods * 2 * Math.PI;\n\n    // Convert polar coordinates (angle, radius) to Cartesian coordinates (x, y)\n    var x = radius * Math.cos(angle);\n    var y = radius * Math.sin(angle);\n    game.createEntity({\n      type: 'HEXAPOD',\n      texture: 'demon',\n      width: 8,\n      height: 8,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n  }\n  var rules = game.createSutra();\n\n  // Define constant values for different forces and parameters\n  var ALIGNMENT_FORCE = 0.1;\n  var COHESION_FORCE = 0.4;\n  var SEPARATION_FORCE = 0.81;\n  var PERCEPTION_RADIUS = 1500;\n  var FIELD_OF_VIEW = 1500;\n\n  // hexapods grow on bullet hit\n  rules[\"if\"]('bulletHitHexapod').then('hexapodGrow');\n  rules.addCondition('bulletHitHexapod', function (entity, gameState) {\n    return entity.type === 'COLLISION' && entity.kind === 'START' && entity.HEXAPOD && entity.BULLET;\n  });\n  rules.on('hexapodGrow', function (collision) {\n    var hexapod = collision.HEXAPOD;\n    var style;\n    // at a certain size, invert the colors\n    if (hexapod.width > 16) {\n      style = {\n        // Define the animation name and duration\n        animation: 'pulse-invert 5s',\n        // Initial filter style\n        filter: 'invert(90%)'\n      };\n    }\n    // update entity size by 11%\n    game.updateEntity({\n      id: hexapod.id,\n      width: hexapod.width * 1.1,\n      height: hexapod.height * 1.1,\n      style: style\n    });\n  });\n\n  // hexpods think each tick\n  rules[\"if\"]('hexapodTick').then('hexapodThink');\n  rules.addCondition('hexapodTick', function (entity, gameState) {\n    return entity.type === 'HEXAPOD' && gameState.tick % 1 === 0;\n  });\n  rules.on('hexapodThink', function (entity, node, gameState) {\n    var hexapod = entity;\n    var hexapods = gameState.ents.HEXAPOD;\n    var alignment = {\n      x: 0,\n      y: 0\n    };\n    var cohesion = {\n      x: 0,\n      y: 0\n    };\n    var separation = {\n      x: 0,\n      y: 0\n    };\n    var planetAvoidance = {\n      x: 0,\n      y: 0\n    };\n\n    // Target movement implementation\n    var targetForce = {\n      x: 0,\n      y: 0\n    };\n    if (typeof gameState.currentPlayer !== 'undefined') {\n      if (gameState.currentPlayer) {\n        var target = gameState.currentPlayer.position;\n        var targetDirection = Vector.sub(target, hexapod.position);\n        targetForce = Vector.mult(Vector.normalize(targetDirection), COHESION_FORCE);\n      }\n    }\n\n    // Process each hexapod in the field of view\n    hexapods.forEach(function (otherHexapod) {\n      if (otherHexapod.id !== hexapod.id) {\n        var d = Vector.magnitude(Vector.sub(hexapod.position, otherHexapod.position));\n\n        // Alignment\n        if (d < PERCEPTION_RADIUS) {\n          alignment = Vector.add(alignment, otherHexapod.velocity);\n        }\n\n        // Cohesion\n        if (d < PERCEPTION_RADIUS) {\n          cohesion = Vector.add(cohesion, otherHexapod.position);\n        }\n\n        // Separation\n        if (d < hexapod.width + otherHexapod.width) {\n          var diff = Vector.sub(hexapod.position, otherHexapod.position);\n          separation = Vector.add(separation, Vector.div(diff, d * d)); // Weight by distance\n        }\n      }\n    });\n\n    // Average out alignment, cohesion, and separation\n    if (hexapods.length > 1) {\n      alignment = Vector.div(alignment, hexapods.length - 1);\n      cohesion = Vector.div(cohesion, hexapods.length - 1);\n      cohesion = Vector.sub(cohesion, hexapod.position);\n      separation = Vector.div(separation, hexapods.length - 1);\n    }\n    alignment = Vector.mult(Vector.normalize(alignment), ALIGNMENT_FORCE);\n    cohesion = Vector.mult(Vector.normalize(cohesion), COHESION_FORCE);\n    separation = Vector.mult(Vector.normalize(separation), SEPARATION_FORCE);\n\n    // Apply forces\n    var force = Vector.add(Vector.add(Vector.add(alignment, cohesion), separation), targetForce);\n    // Update hexapod position\n    var newPosition = Vector.add(hexapod.position, Vector.mult(force, 1));\n    newPosition.z = 1; // for now\n    game.updateEntity({\n      id: hexapod.id,\n      position: newPosition\n    });\n  });\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _bomb = _interopRequireDefault(require(\"./bomb.js\"));\nvar _demon = _interopRequireDefault(require(\"./demon.js\"));\nvar _fount = _interopRequireDefault(require(\"./fount.js\"));\nvar _gameOfLife = _interopRequireDefault(require(\"./game-of-life.js\"));\nvar _note = _interopRequireDefault(require(\"./note.js\"));\nvar _fire = _interopRequireDefault(require(\"./fire.js\"));\nvar _blackhole = _interopRequireDefault(require(\"./blackhole.js\"));\nvar _hexapod = _interopRequireDefault(require(\"./hexapod.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Sutras = {};\nSutras.bomb = _bomb[\"default\"];\nSutras.demon = _demon[\"default\"];\nSutras.fount = _fount[\"default\"];\nSutras.blackhole = _blackhole[\"default\"];\nSutras.fire = _fire[\"default\"];\nSutras.gameOfLife = _gameOfLife[\"default\"];\nSutras.note = _note[\"default\"];\nSutras.hexapod = _hexapod[\"default\"];\nvar _default = exports[\"default\"] = Sutras;\n\n},{\"./blackhole.js\":1,\"./bomb.js\":2,\"./demon.js\":4,\"./fire.js\":5,\"./fount.js\":6,\"./game-of-life.js\":7,\"./hexapod.js\":8,\"./note.js\":10}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = note;\nfunction note(game) {\n  // if touch note play sound\n  game.createEntity({\n    type: 'NOTE',\n    color: 0xccff00,\n    width: 32,\n    height: 32,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: 0,\n      y: 0,\n      z: 1\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedNote', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'NOTE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'NOTE') {\n        return true;\n      }\n    }\n  });\n\n  // TODO: move these events into a Sutra\n  game.on('pointerDown', function (entity) {\n    if (entity.type === 'NOTE') {\n      game.playNote(entity.kind);\n    }\n    if (entity.type === 'DRUM') {\n      game.playDrum(entity.kind);\n    }\n  });\n}\n\n},{}]},{},[3])(3)\n});\n"],"names":["f","exports","module","define","amd","window","global","self","this","SUTRAS","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","game","context","rules","createSutra","on","entityData","arguments","undefined","position","x","y","createEntity","type","texture","isStatic","isSensor","width","height","mass","applyGravity","ent1","ent2","gravity","gameState","distance","sign","Vector","sub","magnitude","normalize","force","Math","min","repulsion","applyForce","id","addCondition","entity","tick","then","node","updatedContext","ents","_","keys","forEach","eId","BLACK_HOLE","blackHole","kind","collision","pendingDestroy","bodyA","bodyB","removeEntity","add","v1","v2","mult","v","factor","div","sqrt","mag","2","_typeof","Symbol","iterator","constructor","prototype","lastFired","components","actionRateLimiter","getLastActionTime","Date","now","addAction","if","directionX","directionY","playerPos","playerRotation","rotation","recordAction","radius","z","sin","cos","bombDirectionConfig","collisionStart","lifetime","friction","frictionStatic","frictionAir","sheet","sprite","playing","owner","velocity","damage","console","log","bombEntity","otherEntity","indexOf","systems","block","blockBulletCollision","3","./index.js","4","depth","DEMON","5","note","ent","currentPlayerId","createDefaultPlayer","ev","playNote","6","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","sprayConfig","settings","obj","key","toPrimitive","String","Number","TypeError","configurable","writable","getOwnPropertyDescriptors","defineProperties","unitType","collisionActive","color","unitSize","sprayAngle","PI","sprayWidth","forceMagnitude","name","rgbColor","fountPosition","rgbColorString","concat","join","unit","angle","random","collisionEnd","style","backgroundColor","7","health","body","initializeGlider","cellSize","cell","neighbors","neighborOffsets","LIFE_CELL","otherCell","_i","_neighborOffsets","offset","wrappedX","wrappedY","aliveNeighbors","neighbor","updateEntity","8","HEXAPOD","BULLET","hexapod","animation","hexapods","alignment","cohesion","separation","targetForce","currentPlayer","target","targetDirection","otherHexapod","d","diff","newPosition","9","_bomb","_interopRequireDefault","_demon","_fount","_gameOfLife","_note","_fire","_blackhole","_hexapod","__esModule","default","Sutras","bomb","demon","fount","blackhole","fire","gameOfLife","./blackhole.js","./bomb.js","./demon.js","./fire.js","./fount.js","./game-of-life.js","./hexapod.js","./note.js","10","playDrum"],"mappings":"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"}