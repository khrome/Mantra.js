{"version":3,"sourceRoot":"../","sources":["./dist/sutras.mantra.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SUTRAS = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = blackHoleSutra;\n// blackHoleSutra.js - Custom Sutra for Black Hole Entity\nfunction blackHoleSutra(game) {\n  // Create the Black Hole entity\n  var blackHole = game.createEntity({\n    type: 'BLACK_HOLE',\n    texture: 'blackHoleTexture',\n    radius: 20,\n    // Define the radius of the black hole\n    position: {\n      x: game.worldCenter.x,\n      y: game.worldCenter.y\n    },\n    mass: 1000 // A large mass to simulate strong gravity\n  });\n  var rules = game.createSutra();\n\n  // Define the gravitational constant\n  var GRAVITATIONAL_CONSTANT = 0.05; // Adjust as needed for gameplay\n\n  // Rule for gravitational pull\n  rules.onEveryTick(function (gameState) {\n    gameState.ents.forEach(function (entity) {\n      if (entity.type !== 'BLACK_HOLE') {\n        applyGravity(blackHole, entity, GRAVITATIONAL_CONSTANT);\n      }\n    });\n  });\n\n  // Function to apply gravitational force\n  function applyGravity(body1, body2, gravity) {\n    var distance = Vector.sub(body2.position, body1.position);\n    var magnitude = Vector.magnitude(distance);\n    if (magnitude < 0.5) {\n      return;\n    }\n    distance = Vector.normalize(distance);\n    var force = gravity * body1.mass * body2.mass / (magnitude * magnitude);\n    var maxForce = 1;\n    force = Math.min(force, maxForce);\n    Matter.Body.applyForce(body2, body2.position, Vector.mult(distance, -force));\n  }\n  return rules;\n}\n\n// Vector operations can be reused or imported from your existing code\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar SUTRAS = require('./index.js');\nconsole.log('SUTRAS', SUTRAS);\nmodule.exports = SUTRAS[\"default\"];\n\n},{\"./index.js\":7}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = demon;\nfunction demon(game) {\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: -60,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: 64,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedDemon', function (entity, gameState) {\n    console.log('entityTouchedDemon check', entity);\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (typeof entity.DEMON !== 'undefined') {\n        return true;\n      }\n    }\n  });\n\n  /*\n  rules.on('entityTouchedDemon', function (collision) {\n    //let demonEntity = collision.bodyA.type === 'DEMON' ? collision.bodyA : collision.bodyB;\n    // Define the scale factor for how much bigger the demon should get\n    const scaleFactor = 2.1; // For example, 10% bigger\n    // Increase the size of the demon\n    game.updateEntity({\n      id: demonEntity.id,\n      width: demonEntity.width * scaleFactor,\n      height: demonEntity.height * scaleFactor,\n      depth: demonEntity.depth * scaleFactor\n    });\n  });\n  */\n\n  return rules;\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fire;\nfunction fire(game) {\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: -80,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: 80,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedFire', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'FIRE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'FIRE') {\n        return true;\n      }\n    }\n  });\n  rules[\"if\"]('entityTouchedFire').then('playNote', {\n    note: 'F#4'\n  }).then('damageEntity');\n  rules.on('damageEntity', function (collision) {\n    var ent;\n    if (collision.bodyA.type === 'FIRE') {\n      ent = collision.bodyB;\n    } else {\n      ent = collision.bodyA;\n    }\n    // create a copy of the entity previous texture\n    // TODO: remove the createDefaultPlayer() call here\n    //       and instead have a game.on('player::death') event\n    //       listening in parent Sutra\n    var texture = ent.texture;\n    game.removeEntity(ent.id);\n    if (ent.type === 'PLAYER') {\n      game.currentPlayerId = null;\n      game.createDefaultPlayer({\n        texture: texture\n      });\n    }\n  });\n\n  // TODO: move pointerDown event into Sutra\n  game.on('pointerDown', function (entity, ev) {\n    if (entity.type === 'FIRE') {\n      game.playNote('G4');\n    }\n  });\n  return rules;\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = gameOfLife;\nfunction gameOfLife(game) {\n  var GRID_SIZE = 150; // Define the size of the grid\n  var CELL_SIZE = 5; // Size of each cell\n\n  // Initialize grid cells\n  for (var x = 0; x < GRID_SIZE; x += CELL_SIZE) {\n    for (var y = 0; y < GRID_SIZE; y += CELL_SIZE) {\n      game.createEntity({\n        type: 'LIFE_CELL',\n        //health: Math.random() < 0.5 ? 1 : 2, // 1 is alive, 2 is dead\n        health: 2,\n        position: {\n          x: x,\n          y: y\n        },\n        body: false,\n        width: CELL_SIZE,\n        height: CELL_SIZE\n      });\n    }\n  }\n  function initializeGlider(x, y, cellSize, game) {\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y - cellSize\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y - 2 * cellSize\n      }\n    });\n  }\n  initializeGlider(100, 100, CELL_SIZE, game);\n  var rules = game.createSutra();\n\n  // Rule for updating cell state\n  rules[\"if\"]('updateCellState').then('transitionCellState');\n  rules.addCondition('updateCellState', function (entity, gameState) {\n    return entity.type === 'LIFE_CELL' && gameState.tick % 10 === 0; // Update every 2 ticks\n  });\n  rules.on('transitionCellState', function (entity, node, gameState) {\n    var neighbors = getNeighbors(entity, node, gameState); // Function to get neighboring cells\n    var aliveNeighbors = neighbors.filter(function (neighbor) {\n      return neighbor.health === 1;\n    }).length;\n\n    // console.log(neighbors, aliveNeighbors)\n    // Game of Life rules\n    if (entity.health === 1 && (aliveNeighbors < 2 || aliveNeighbors > 3)) {\n      //entity.state = 'dead';\n      entity.health = 0;\n    } else if (entity.health === 2 && aliveNeighbors === 3) {\n      entity.health = 1;\n      //entity.state = 'alive';\n    }\n\n    // Update entity in the game\n    game.updateEntity({\n      id: entity.id,\n      health: entity.health,\n      style: {\n        backgroundColor: entity.health === 1 ? 'green' : 'black'\n      }\n    });\n  });\n  return rules;\n}\nfunction getNeighbors(cell, node, gameState) {\n  var gridSize = 150; // Define the size of the grid\n  var cellSize = 5; // Assuming each cell has a fixed size\n\n  var neighbors = [];\n  var neighborOffsets = [{\n    x: -cellSize,\n    y: -cellSize\n  }, {\n    x: 0,\n    y: -cellSize\n  }, {\n    x: cellSize,\n    y: -cellSize\n  }, {\n    x: -cellSize,\n    y: 0\n  }, /* Current Cell */{\n    x: cellSize,\n    y: 0\n  }, {\n    x: -cellSize,\n    y: cellSize\n  }, {\n    x: 0,\n    y: cellSize\n  }, {\n    x: cellSize,\n    y: cellSize\n  }];\n  gameState.ents.LIFE_CELL.forEach(function (otherCell) {\n    for (var _i = 0, _neighborOffsets = neighborOffsets; _i < _neighborOffsets.length; _i++) {\n      var offset = _neighborOffsets[_i];\n      var wrappedX = (cell.position.x + offset.x + gridSize) % gridSize;\n      var wrappedY = (cell.position.y + offset.y + gridSize) % gridSize;\n      if (otherCell.position.x === wrappedX && otherCell.position.y === wrappedY) {\n        neighbors.push(otherCell);\n        break; // Found neighbor, no need to check other offsets\n      }\n    }\n  });\n  return neighbors;\n}\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexapod;\n// hexapod.js - Marak Squires 2023\nfunction hexapod(game) {\n  // create 22 hexapods\n  // start at 0,0 and make them in a circle with radius 80\n  var numberOfHexapods = 22;\n  var radius = 80;\n  for (var i = 0; i < numberOfHexapods; i++) {\n    // Calculate the angle for each hexapod\n    var angle = i / numberOfHexapods * 2 * Math.PI;\n\n    // Convert polar coordinates (angle, radius) to Cartesian coordinates (x, y)\n    var x = radius * Math.cos(angle);\n    var y = radius * Math.sin(angle);\n    game.createEntity({\n      type: 'HEXAPOD',\n      texture: 'demon',\n      width: 8,\n      height: 8,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n  }\n  var rules = game.createSutra();\n\n  // Define constant values for different forces and parameters\n  var ALIGNMENT_FORCE = 0.1;\n  var COHESION_FORCE = 0.4;\n  var SEPARATION_FORCE = 0.81;\n  var PERCEPTION_RADIUS = 1500;\n  var FIELD_OF_VIEW = 1500;\n\n  // hexapods grow on bullet hit\n  rules[\"if\"]('bulletHitHexapod').then('hexapodGrow');\n  rules.addCondition('bulletHitHexapod', function (entity, gameState) {\n    return entity.type === 'COLLISION' && entity.kind === 'START' && entity.HEXAPOD && entity.BULLET;\n  });\n  rules.on('hexapodGrow', function (collision) {\n    var hexapod = collision.HEXAPOD;\n    // update entity size by 11%\n    game.updateEntity({\n      id: hexapod.id,\n      width: hexapod.width * 1.1,\n      height: hexapod.height * 1.1\n    });\n  });\n\n  // hexpods think each tick\n  rules[\"if\"]('hexapodTick').then('hexapodThink');\n  rules.addCondition('hexapodTick', function (entity, gameState) {\n    return entity.type === 'HEXAPOD' && gameState.tick % 1 === 0;\n  });\n  rules.on('hexapodThink', function (entity, node, gameState) {\n    var hexapod = entity;\n    var hexapods = gameState.ents.HEXAPOD;\n    var alignment = {\n      x: 0,\n      y: 0\n    };\n    var cohesion = {\n      x: 0,\n      y: 0\n    };\n    var separation = {\n      x: 0,\n      y: 0\n    };\n    var planetAvoidance = {\n      x: 0,\n      y: 0\n    };\n\n    // Target movement implementation\n    var targetForce = {\n      x: 0,\n      y: 0\n    };\n    if (typeof gameState.currentPlayer !== 'undefined') {\n      if (gameState.currentPlayer) {\n        var target = gameState.currentPlayer.position;\n        var targetDirection = Vector.sub(target, hexapod.position);\n        targetForce = Vector.mult(Vector.normalize(targetDirection), COHESION_FORCE);\n      }\n    }\n\n    // Process each hexapod in the field of view\n    hexapods.forEach(function (otherHexapod) {\n      if (otherHexapod.id !== hexapod.id) {\n        var d = Vector.magnitude(Vector.sub(hexapod.position, otherHexapod.position));\n\n        // Alignment\n        if (d < PERCEPTION_RADIUS) {\n          alignment = Vector.add(alignment, otherHexapod.velocity);\n        }\n\n        // Cohesion\n        if (d < PERCEPTION_RADIUS) {\n          cohesion = Vector.add(cohesion, otherHexapod.position);\n        }\n\n        // Separation\n        if (d < hexapod.width + otherHexapod.width) {\n          var diff = Vector.sub(hexapod.position, otherHexapod.position);\n          separation = Vector.add(separation, Vector.div(diff, d * d)); // Weight by distance\n        }\n      }\n    });\n\n    // Average out alignment, cohesion, and separation\n    if (hexapods.length > 1) {\n      alignment = Vector.div(alignment, hexapods.length - 1);\n      cohesion = Vector.div(cohesion, hexapods.length - 1);\n      cohesion = Vector.sub(cohesion, hexapod.position);\n      separation = Vector.div(separation, hexapods.length - 1);\n    }\n    alignment = Vector.mult(Vector.normalize(alignment), ALIGNMENT_FORCE);\n    cohesion = Vector.mult(Vector.normalize(cohesion), COHESION_FORCE);\n    separation = Vector.mult(Vector.normalize(separation), SEPARATION_FORCE);\n\n    // Apply forces\n    var force = Vector.add(Vector.add(Vector.add(alignment, cohesion), separation), targetForce);\n    // Update hexapod position\n    var newPosition = Vector.add(hexapod.position, Vector.mult(force, 1));\n    newPosition.z = 1; // for now\n    game.updateEntity({\n      id: hexapod.id,\n      position: newPosition\n    });\n  });\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _demon = _interopRequireDefault(require(\"./demon.js\"));\nvar _gameOfLife = _interopRequireDefault(require(\"./game-of-life.js\"));\nvar _note = _interopRequireDefault(require(\"./note.js\"));\nvar _fire = _interopRequireDefault(require(\"./fire.js\"));\nvar _blackhole = _interopRequireDefault(require(\"./blackhole.js\"));\nvar _hexapod = _interopRequireDefault(require(\"./hexapod.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Sutras = {};\nSutras.demon = _demon[\"default\"];\nSutras.blackhole = _blackhole[\"default\"];\nSutras.fire = _fire[\"default\"];\nSutras.gameOfLife = _gameOfLife[\"default\"];\nSutras.note = _note[\"default\"];\nSutras.hexapod = _hexapod[\"default\"];\nvar _default = exports[\"default\"] = Sutras;\n\n},{\"./blackhole.js\":1,\"./demon.js\":3,\"./fire.js\":4,\"./game-of-life.js\":5,\"./hexapod.js\":6,\"./note.js\":8}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = note;\nfunction note(game) {\n  // if touch note play sound\n  game.createEntity({\n    type: 'NOTE',\n    color: 0xccff00,\n    width: 32,\n    height: 32,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: 0,\n      y: 0,\n      z: 1\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedNote', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'NOTE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'NOTE') {\n        return true;\n      }\n    }\n  });\n\n  // TODO: move these events into a Sutra\n  game.on('pointerDown', function (entity) {\n    if (entity.type === 'NOTE') {\n      game.playNote(entity.kind);\n    }\n    if (entity.type === 'DRUM') {\n      game.playDrum(entity.kind);\n    }\n  });\n}\n\n},{}]},{},[2])(2)\n});\n"],"names":["f","exports","module","define","amd","window","global","self","this","SUTRAS","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","game","blackHole","createEntity","type","texture","radius","position","x","worldCenter","y","mass","rules","createSutra","onEveryTick","gameState","ents","forEach","entity","body1","gravity","distance","magnitude","body2","Vector","sub","normalize","force","Math","min","Matter","Body","applyForce","mult","2","console","log","./index.js","3","width","height","depth","z","addCondition","kind","DEMON","4","sheet","sprite","isStatic","bodyA","bodyB","then","note","on","collision","ent","removeEntity","id","currentPlayerId","createDefaultPlayer","ev","playNote","5","health","body","initializeGlider","cellSize","tick","node","cell","neighbors","neighborOffsets","LIFE_CELL","otherCell","_i","_neighborOffsets","offset","wrappedX","wrappedY","push","aliveNeighbors","filter","neighbor","updateEntity","style","backgroundColor","6","angle","PI","cos","sin","HEXAPOD","BULLET","hexapod","hexapods","alignment","cohesion","separation","targetForce","currentPlayer","target","targetDirection","otherHexapod","d","add","velocity","diff","div","newPosition","v1","v2","v","factor","sqrt","mag","7","_demon","_interopRequireDefault","_gameOfLife","_note","_fire","_blackhole","_hexapod","obj","__esModule","default","Sutras","demon","blackhole","fire","gameOfLife","./blackhole.js","./demon.js","./fire.js","./game-of-life.js","./hexapod.js","./note.js","8","color","playDrum"],"mappings":"AAAA,CAAA,SAAUA,GAAuB,UAAjB,OAAOC,SAAoC,aAAhB,OAAOC,OAAsBA,OAAOD,QAAQD,EAAE,EAA0B,YAAhB,OAAOG,QAAqBA,OAAOC,IAAKD,OAAO,GAAGH,CAAC,GAAgC,aAAhB,OAAOK,OAAwBA,OAA+B,aAAhB,OAAOC,OAAwBA,OAA6B,aAAd,OAAOC,KAAsBA,KAAYC,MAAOC,OAAST,EAAE,CAAG,EAAE,WAAqC,OAAmB,SAASU,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEf,GAAG,GAAG,CAACY,EAAEG,GAAG,CAAC,GAAG,CAACJ,EAAEI,GAAG,CAAC,IAAIC,EAAE,YAAY,OAAOC,SAASA,QAAQ,GAAG,CAACjB,GAAGgB,EAAE,OAAOA,EAAED,EAAE,CAAA,CAAE,EAAE,GAAGG,EAAE,OAAOA,EAAEH,EAAE,CAAA,CAAE,EAAgD,MAA1CI,EAAE,IAAIC,MAAM,uBAAuBL,EAAE,GAAG,GAAUM,KAAK,mBAAmBF,CAAC,CAAKG,EAAEV,EAAEG,GAAG,CAACd,QAAQ,EAAE,EAAEU,EAAEI,GAAG,GAAGQ,KAAKD,EAAErB,QAAQ,SAASS,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,CAAC,CAAC,EAAEY,EAAEA,EAAErB,QAAQS,EAAEC,EAAEC,EAAEC,CAAC,CAAC,CAAC,OAAOD,EAAEG,GAAGd,OAAO,CAAC,IAAI,IAAIiB,EAAE,YAAY,OAAOD,SAASA,QAAQF,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,CAAC,GAAGD,EAAED,EAAEE,EAAE,EAAE,OAAOD,CAAC,EAAc,CAACW,EAAE,CAAC,SAASR,EAAQf,EAAOD,GACt1B,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QAEjB,SAAwB4B,GAEtB,IAAIC,EAAYD,EAAKE,aAAa,CAChCC,KAAM,aACNC,QAAS,mBACTC,OAAQ,GAERC,SAAU,CACRC,EAAGP,EAAKQ,YAAYD,EACpBE,EAAGT,EAAKQ,YAAYC,CACtB,EACAC,KAAM,GACR,CAAC,EACGC,EAAQX,EAAKY,YAAY,EA2B7B,OArBAD,EAAME,YAAY,SAAUC,GAC1BA,EAAUC,KAAKC,QAAQ,SAAUC,GAQnC,IAAsBC,EAAcC,EAC9BC,EACAC,EATkB,eAAhBJ,EAAOd,OAOOe,EANHjB,EAMUqB,EANCL,EAMME,EAZP,IAavBC,EAAWG,OAAOC,IAAIF,EAAMhB,SAAUY,EAAMZ,QAAQ,GACpDe,EAAYE,OAAOF,UAAUD,CAAQ,GACzB,KAGhBA,EAAWG,OAAOE,UAAUL,CAAQ,EAChCM,EAAQP,EAAUD,EAAMR,KAAOY,EAAMZ,MAAQW,EAAYA,GAE7DK,EAAQC,KAAKC,IAAIF,EADF,CACiB,EAChCG,OAAOC,KAAKC,WAAWT,EAAOA,EAAMhB,SAAUiB,OAAOS,KAAKZ,EAAU,CAACM,CAAK,CAAC,GAd3E,CAAC,CACH,CAAC,EAeMf,CACT,CAIA,EAAE,IAAIsB,EAAE,CAAC,SAAS7C,EAAQf,EAAOD,GACjC,aAEIQ,EAASQ,EAAQ,YAAY,EACjC8C,QAAQC,IAAI,SAAUvD,CAAM,EAC5BP,EAAOD,QAAUQ,EAAgB,OAEjC,EAAE,CAACwD,aAAa,CAAC,GAAGC,EAAE,CAAC,SAASjD,EAAQf,EAAOD,GAC/C,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QACjB,SAAe4B,GACbA,EAAKE,aAAa,CAChBC,KAAM,QACNC,QAAS,QAGTkC,MAAO,EACPC,OAAQ,EACRC,MAAO,GACPlC,SAAU,CACRC,EAAG,CAAC,GACJE,EAAG,CAAC,GACJgC,EAAG,EACL,CACF,CAAC,EACDzC,EAAKE,aAAa,CAChBC,KAAM,QACNC,QAAS,QAGTkC,MAAO,EACPC,OAAQ,EACRC,MAAO,GACPlC,SAAU,CACRC,EAAG,GACHE,EAAG,CAAC,GACJgC,EAAG,EACL,CACF,CAAC,EACG9B,EAAQX,EAAKY,YAAY,EAyB7B,OAxBAD,EAAM+B,aAAa,qBAAsB,SAAUzB,EAAQH,GAEzD,GADAoB,QAAQC,IAAI,2BAA4BlB,CAAM,EAC1B,cAAhBA,EAAOd,MAAwC,UAAhBc,EAAO0B,MACZ,KAAA,IAAjB1B,EAAO2B,MAChB,MAAO,CAAA,CAGb,CAAC,EAiBMjC,CACT,CAEA,EAAE,IAAIkC,EAAE,CAAC,SAASzD,EAAQf,EAAOD,GACjC,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QACjB,SAAc4B,GACZA,EAAKE,aAAa,CAChBC,KAAM,OACNC,QAAS,CACP0C,MAAO,kBACPC,OAAQ,MAEV,EAGAT,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPQ,SAAU,CAAA,EACV1C,SAAU,CACRC,EAAG,CAAC,GACJE,EAAG,CAAC,GACJgC,EAAG,EACL,CACF,CAAC,EACDzC,EAAKE,aAAa,CAChBC,KAAM,OACNC,QAAS,CACP0C,MAAO,kBACPC,OAAQ,MAEV,EAGAT,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPQ,SAAU,CAAA,EACV1C,SAAU,CACRC,EAAG,GACHE,EAAG,CAAC,GACJgC,EAAG,EACL,CACF,CAAC,EACD,IAAI9B,EAAQX,EAAKY,YAAY,EAyC7B,OAxCAD,EAAM+B,aAAa,oBAAqB,SAAUzB,EAAQH,GACxD,GAAoB,cAAhBG,EAAOd,MAAwC,UAAhBc,EAAO0B,KACxC,MAA0B,SAAtB1B,EAAOgC,MAAM9C,MAGS,SAAtBc,EAAOiC,MAAM/C,MAAjB,KAAA,CAIJ,CAAC,EACDQ,EAAU,GAAE,mBAAmB,EAAEwC,KAAK,WAAY,CAChDC,KAAM,KACR,CAAC,EAAED,KAAK,cAAc,EACtBxC,EAAM0C,GAAG,eAAgB,SAAUC,GACjC,IAEEC,EAD2B,SAAzBD,EAAUL,MAAM9C,KACZmD,EAAUJ,MAEVI,EAAUL,MAMd7C,EAAUmD,EAAInD,QAClBJ,EAAKwD,aAAaD,EAAIE,EAAE,EACP,WAAbF,EAAIpD,OACNH,EAAK0D,gBAAkB,KACvB1D,EAAK2D,oBAAoB,CACvBvD,QAASA,CACX,CAAC,EAEL,CAAC,EAGDJ,EAAKqD,GAAG,cAAe,SAAUpC,EAAQ2C,GACnB,SAAhB3C,EAAOd,MACTH,EAAK6D,SAAS,IAAI,CAEtB,CAAC,EACMlD,CACT,CAEA,EAAE,IAAImD,EAAE,CAAC,SAAS1E,EAAQf,EAAOD,GACjC,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QACjB,SAAoB4B,GAKlB,IAJA,IAISO,EAAI,EAAGA,EAJA,IAIeA,GAHf,EAId,IAAK,IAAIE,EAAI,EAAGA,EALF,IAKiBA,GAJjB,EAKZT,EAAKE,aAAa,CAChBC,KAAM,YAEN4D,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EACHE,EAAGA,CACL,EACAuD,KAAM,CAAA,EACN1B,MAdU,EAeVC,OAfU,CAgBZ,CAAC,EA4DL0B,CAzDA,SAA0B1D,EAAGE,EAAGyD,EAAUlE,GACxCA,EAAKE,aAAa,CAChBC,KAAM,YACNmC,MAAO4B,EACP3B,OAAQ2B,EACRF,KAAM,CAAA,EACND,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EACHE,EAAGA,CACL,CACF,CAAC,EACDT,EAAKE,aAAa,CAChBC,KAAM,YACNmC,MAAO4B,EACP3B,OAAQ2B,EACRF,KAAM,CAAA,EACND,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EAAI2D,EACPzD,EAAGA,CACL,CACF,CAAC,EACDT,EAAKE,aAAa,CAChBC,KAAM,YACNmC,MAAO4B,EACP3B,OAAQ2B,EACRF,KAAM,CAAA,EACND,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EAAI,EAAI2D,EACXzD,EAAGA,CACL,CACF,CAAC,EACDT,EAAKE,aAAa,CAChBC,KAAM,YACNmC,MAAO4B,EACP3B,OAAQ2B,EACRF,KAAM,CAAA,EACND,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EAAI,EAAI2D,EACXzD,EAAGA,EAAIyD,CACT,CACF,CAAC,EACDlE,EAAKE,aAAa,CAChBC,KAAM,YACNmC,MAAO4B,EACP3B,OAAQ2B,EACRF,KAAM,CAAA,EACND,OAAQ,EACRzD,SAAU,CACRC,EAAGA,EAAI2D,EACPzD,EAAGA,EAAI,EAAIyD,CACb,CACF,CAAC,CACH,EACiB,IAAK,IA5EN,EA4EsBlE,CAAI,EAC1C,IAAIW,EAAQX,EAAKY,YAAY,EAgC7B,OA7BAD,EAAU,GAAE,iBAAiB,EAAEwC,KAAK,qBAAqB,EACzDxC,EAAM+B,aAAa,kBAAmB,SAAUzB,EAAQH,GACtD,MAAuB,cAAhBG,EAAOd,MAAwBW,EAAUqD,KAAO,IAAO,CAChE,CAAC,EACDxD,EAAM0C,GAAG,sBAAuB,SAAUpC,EAAQmD,EAAMtD,GA2BpCuD,EA1BWpD,EA8B3BqD,EAAY,GACZC,EAAkB,CAAC,CACrBhE,EAAG,CAJU,EAKbE,EAAG,CALU,CAMf,EAAG,CACDF,EAAG,EACHE,EAAG,CARU,CASf,EAAG,CACDF,EAVa,EAWbE,EAAG,CAXU,CAYf,EAAG,CACDF,EAAG,CAbU,EAcbE,EAAG,CACL,EAAqB,CACnBF,EAhBa,EAiBbE,EAAG,CACL,EAAG,CACDF,EAAG,CAnBU,EAoBbE,EApBa,CAqBf,EAAG,CACDF,EAAG,EACHE,EAvBa,CAwBf,EAAG,CACDF,EAzBa,EA0BbE,EA1Ba,CA2Bf,GAvD6CK,EAwDnCC,KAAKyD,UAAUxD,QAAQ,SAAUyD,GACzC,IAAK,IAAIC,EAAK,EAAGC,EAAmBJ,EAAiBG,EAAKC,EAAiBhF,OAAQ+E,CAAE,GAAI,CACvF,IAAIE,EAASD,EAAiBD,GAC1BG,GAAYR,EAAK/D,SAASC,EAAIqE,EAAOrE,EAhC9B,KAAA,IAiCPuE,GAAYT,EAAK/D,SAASG,EAAImE,EAAOnE,EAjC9B,KAAA,IAkCX,GAAIgE,EAAUnE,SAASC,IAAMsE,GAAYJ,EAAUnE,SAASG,IAAMqE,EAAU,CAC1ER,EAAUS,KAAKN,CAAS,EACxB,KACF,CACF,CACF,CAAC,EAlEC,IA0BkBJ,EAIhBC,EACAC,EA9BES,EAkECV,EAlE0BW,OAAO,SAAUC,GAC9C,OAA2B,IAApBA,EAASnB,MAClB,CAAC,EAAEpE,OAImB,IAAlBsB,EAAO8C,SAAiBiB,EAAiB,GAAsB,EAAjBA,GAEhD/D,EAAO8C,OAAS,EACW,IAAlB9C,EAAO8C,QAAmC,IAAnBiB,IAChC/D,EAAO8C,OAAS,GAKlB/D,EAAKmF,aAAa,CAChB1B,GAAIxC,EAAOwC,GACXM,OAAQ9C,EAAO8C,OACfqB,MAAO,CACLC,gBAAmC,IAAlBpE,EAAO8C,OAAe,QAAU,OACnD,CACF,CAAC,CACH,CAAC,EACMpD,CACT,CA6CA,EAAE,IAAI2E,EAAE,CAAC,SAASlG,EAAQf,EAAOD,GACjC,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QAEjB,SAAiB4B,GAKf,IAFA,IAESd,EAAI,EAAGA,EAFO,GAEeA,CAAC,GAAI,CAEzC,IAAIqG,EAAQrG,EAJS,GAIc,EAAIyC,KAAK6D,GAGxCjF,EANO,GAMMoB,KAAK8D,IAAIF,CAAK,EAC3B9E,EAPO,GAOMkB,KAAK+D,IAAIH,CAAK,EAC/BvF,EAAKE,aAAa,CAChBC,KAAM,UACNC,QAAS,QACTkC,MAAO,EACPC,OAAQ,EACRjC,SAAU,CACRC,EAAGA,EACHE,EAAGA,CACL,CACF,CAAC,CACH,CACA,IAAIE,EAAQX,EAAKY,YAAY,EA0G7B,OAhGAD,EAAU,GAAE,kBAAkB,EAAEwC,KAAK,aAAa,EAClDxC,EAAM+B,aAAa,mBAAoB,SAAUzB,EAAQH,GACvD,MAAuB,cAAhBG,EAAOd,MAAwC,UAAhBc,EAAO0B,MAAoB1B,EAAO0E,SAAW1E,EAAO2E,MAC5F,CAAC,EACDjF,EAAM0C,GAAG,cAAe,SAAUC,GAC5BuC,EAAUvC,EAAUqC,QAExB3F,EAAKmF,aAAa,CAChB1B,GAAIoC,EAAQpC,GACZnB,MAAuB,IAAhBuD,EAAQvD,MACfC,OAAyB,IAAjBsD,EAAQtD,MAClB,CAAC,CACH,CAAC,EAGD5B,EAAU,GAAE,aAAa,EAAEwC,KAAK,cAAc,EAC9CxC,EAAM+B,aAAa,cAAe,SAAUzB,EAAQH,GAClD,MAAuB,YAAhBG,EAAOd,MAAsBW,EAAUqD,KAAO,GAAM,CAC7D,CAAC,EACDxD,EAAM0C,GAAG,eAAgB,SAAUpC,EAAQmD,EAAMtD,GAC/C,IAAI+E,EAAU5E,EACV6E,EAAWhF,EAAUC,KAAK4E,QAC1BI,EAAY,CACdxF,EAAG,EACHE,EAAG,CACL,EACIuF,EAAW,CACbzF,EAAG,EACHE,EAAG,CACL,EACIwF,EAAa,CACf1F,EAAG,EACHE,EAAG,CACL,EAOIyF,EAAc,CAChB3F,EAAG,EACHE,EAAG,CACL,EA4CIiB,GA3CmC,KAAA,IAA5BZ,EAAUqF,eACfrF,EAAUqF,gBACRC,EAAStF,EAAUqF,cAAc7F,SACjC+F,EAAkB9E,EAAOC,IAAI4E,EAAQP,EAAQvF,QAAQ,EACzD4F,EAAc3E,EAAOS,KAAKT,EAAOE,UAAU4E,CAAe,EAtD3C,EAsD4D,GAK/EP,EAAS9E,QAAQ,SAAUsF,GACzB,IACMC,EADFD,EAAa7C,KAAOoC,EAAQpC,MAC1B8C,EAAIhF,EAAOF,UAAUE,EAAOC,IAAIqE,EAAQvF,SAAUgG,EAAahG,QAAQ,CAAC,GA3D1D,OA+DhByF,EAAYxE,EAAOiF,IAAIT,EAAWO,EAAaG,QAAQ,GAIrDF,EAnEc,OAoEhBP,EAAWzE,EAAOiF,IAAIR,EAAUM,EAAahG,QAAQ,GAInDiG,EAAIV,EAAQvD,MAAQgE,EAAahE,SAC/BoE,EAAOnF,EAAOC,IAAIqE,EAAQvF,SAAUgG,EAAahG,QAAQ,EAC7D2F,EAAa1E,EAAOiF,IAAIP,EAAY1E,EAAOoF,IAAID,EAAMH,EAAIA,CAAC,CAAC,EAGjE,CAAC,EAGqB,EAAlBT,EAASnG,SACXoG,EAAYxE,EAAOoF,IAAIZ,EAAWD,EAASnG,OAAS,CAAC,EACrDqG,EAAWzE,EAAOoF,IAAIX,EAAUF,EAASnG,OAAS,CAAC,EACnDqG,EAAWzE,EAAOC,IAAIwE,EAAUH,EAAQvF,QAAQ,EAChD2F,EAAa1E,EAAOoF,IAAIV,EAAYH,EAASnG,OAAS,CAAC,GAEzDoG,EAAYxE,EAAOS,KAAKT,EAAOE,UAAUsE,CAAS,EAzF9B,EAyFgD,EACpEC,EAAWzE,EAAOS,KAAKT,EAAOE,UAAUuE,CAAQ,EAzF7B,EAyF8C,EACjEC,EAAa1E,EAAOS,KAAKT,EAAOE,UAAUwE,CAAU,EAzF/B,GAyFkD,EAG3D1E,EAAOiF,IAAIjF,EAAOiF,IAAIjF,EAAOiF,IAAIT,EAAWC,CAAQ,EAAGC,CAAU,EAAGC,CAAW,GAEvFU,EAAcrF,EAAOiF,IAAIX,EAAQvF,SAAUiB,EAAOS,KAAKN,EAAO,CAAC,CAAC,EACpEkF,EAAYnE,EAAI,EAChBzC,EAAKmF,aAAa,CAChB1B,GAAIoC,EAAQpC,GACZnD,SAAUsG,CACZ,CAAC,CACH,CAAC,EACMjG,CACT,EAGA,IAAIY,EAAS,CACXiF,IAAK,SAAaK,EAAIC,GACpB,MAAO,CACLvG,EAAGsG,EAAGtG,EAAIuG,EAAGvG,EACbE,EAAGoG,EAAGpG,EAAIqG,EAAGrG,CACf,CACF,EACAe,IAAK,SAAaqF,EAAIC,GACpB,MAAO,CACLvG,EAAGsG,EAAGtG,EAAIuG,EAAGvG,EACbE,EAAGoG,EAAGpG,EAAIqG,EAAGrG,CACf,CACF,EACAuB,KAAM,SAAc+E,EAAGC,GACrB,MAAO,CACLzG,EAAGwG,EAAExG,EAAIyG,EACTvG,EAAGsG,EAAEtG,EAAIuG,CACX,CACF,EACAL,IAAK,SAAaI,EAAGC,GACnB,MAAO,CACLzG,EAAGwG,EAAExG,EAAIyG,EACTvG,EAAGsG,EAAEtG,EAAIuG,CACX,CACF,EACA3F,UAAW,SAAmB0F,GAC5B,OAAOpF,KAAKsF,KAAKF,EAAExG,EAAIwG,EAAExG,EAAIwG,EAAEtG,EAAIsG,EAAEtG,CAAC,CACxC,EACAgB,UAAW,SAAmBsF,GAC5B,IAAIG,EAAM3F,EAAOF,UAAU0F,CAAC,EAC5B,OAAa,EAANG,EAAU3F,EAAOoF,IAAII,EAAGG,CAAG,EAAI,CACpC3G,EAAG,EACHE,EAAG,CACL,CACF,CACF,CAEA,EAAE,IAAI0G,EAAE,CAAC,SAAS/H,EAAQf,EAAOD,GACjC,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QAAI,KAAA,EACrB,IAAIgJ,EAASC,EAAuBjI,EAAQ,YAAY,CAAC,EACrDkI,EAAcD,EAAuBjI,EAAQ,mBAAmB,CAAC,EACjEmI,EAAQF,EAAuBjI,EAAQ,WAAW,CAAC,EACnDoI,EAAQH,EAAuBjI,EAAQ,WAAW,CAAC,EACnDqI,EAAaJ,EAAuBjI,EAAQ,gBAAgB,CAAC,EAC7DsI,EAAWL,EAAuBjI,EAAQ,cAAc,CAAC,EAC7D,SAASiI,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAAWF,CAAI,CAAG,CAChG,IAAIG,EAAS,GACbA,EAAOC,MAAQX,EAAgB,QAC/BU,EAAOE,UAAYP,EAAoB,QACvCK,EAAOG,KAAOT,EAAe,QAC7BM,EAAOI,WAAaZ,EAAqB,QACzCQ,EAAO1E,KAAOmE,EAAe,QAC7BO,EAAOjC,QAAU6B,EAAkB,QACpBtJ,EAAiB,QAAI0J,CAEpC,EAAE,CAACK,iBAAiB,EAAEC,aAAa,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,eAAe,EAAEC,YAAY,CAAC,GAAGC,EAAE,CAAC,SAASrJ,EAAQf,EAAOD,GACrI,aAEAyB,OAAOC,eAAe1B,EAAS,aAAc,CAC3C2B,MAAO,CAAA,CACT,CAAC,EACD3B,EAAiB,QACjB,SAAc4B,GAEZA,EAAKE,aAAa,CAChBC,KAAM,OACNuI,MAAO,SACPpG,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPQ,SAAU,CAAA,EACV1C,SAAU,CACRC,EAAG,EACHE,EAAG,EACHgC,EAAG,CACL,CACF,CAAC,EACWzC,EAAKY,YAAY,EACvB8B,aAAa,oBAAqB,SAAUzB,EAAQH,GACxD,GAAoB,cAAhBG,EAAOd,MAAwC,UAAhBc,EAAO0B,KACxC,MAA0B,SAAtB1B,EAAOgC,MAAM9C,MAGS,SAAtBc,EAAOiC,MAAM/C,MAAjB,KAAA,CAIJ,CAAC,EAGDH,EAAKqD,GAAG,cAAe,SAAUpC,GACX,SAAhBA,EAAOd,MACTH,EAAK6D,SAAS5C,EAAO0B,IAAI,EAEP,SAAhB1B,EAAOd,MACTH,EAAK2I,SAAS1H,EAAO0B,IAAI,CAE7B,CAAC,CACH,CAEA,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAChB,CAAC"}