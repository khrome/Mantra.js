{"version":3,"sourceRoot":"../","sources":["./dist/sutras.mantra.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SUTRAS = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = blackHoleSutra;\n// blackhole.js - Marak Squires 2023\nfunction blackHoleSutra(game, context) {\n  var rules = game.createSutra();\n\n  // Remark: Note namspace of sutraname::methodname\n  //         Mantra runs a single Sutra tree which all entities are bound to\n  //         This requires a unique namespace for each Sutra\n  rules.on('blackhole::create', function () {\n    var entityData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    // Create the Black Hole entity\n    var blackHole = game.createEntity({\n      type: 'BLACK_HOLE',\n      texture: 'fire',\n      isStatic: true,\n      isSensor: true,\n      width: 4,\n      height: 4,\n      //radius: 20,\n      position: {\n        x: entityData.position.x,\n        y: entityData.position.y\n      },\n      mass: 100\n    });\n  });\n\n  // Define the gravitational constant\n  var GRAVITATIONAL_CONSTANT = 0.01; // Adjust as needed for gameplay\n\n  rules.addCondition('gravityTick', function (entity, gameState) {\n    return gameState.tick % 5 === 0;\n  });\n  rules[\"if\"]('gravityTick').then('applyGravity');\n  rules.on('applyGravity', function (entityData, node, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      Object.keys(gameState.ents._).forEach(function (eId) {\n        var entity = gameState.ents._[eId];\n        if (entity.type !== 'BLACK_HOLE') {\n          applyGravity(context, entity, GRAVITATIONAL_CONSTANT, gameState);\n        }\n      });\n      return;\n    }\n    if (gameState.ents.BLACK_HOLE) {\n      gameState.ents.BLACK_HOLE.forEach(function (blackHole) {\n        Object.keys(gameState.ents._).forEach(function (eId) {\n          var entity = gameState.ents._[eId];\n          if (entity.type !== 'BLACK_HOLE') {\n            applyGravity(blackHole, entity, GRAVITATIONAL_CONSTANT, gameState);\n          }\n        });\n      });\n    }\n  });\n  rules[\"if\"]('entTouchedBlackhole').then('blackHoleCollision');\n  rules.addCondition('entTouchedBlackhole', function (entity, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity[context.type];\n    } else {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity.BLACK_HOLE;\n    }\n  });\n  rules.on('blackHoleCollision', function (collision, node, gameState) {\n    var pendingDestroy = collision.bodyA;\n    var blackHole = collision.bodyB;\n    if (collision.bodyA.type === 'BLACK_HOLE') {\n      pendingDestroy = collision.bodyB;\n      blackHole = collision.bodyA;\n    }\n    if (typeof context !== 'undefined') {\n      if (collision.bodyA.type === context.type) {\n        pendingDestroy = collision.bodyB;\n      } else {\n        pendingDestroy = collision.bodyA;\n      }\n      blackHole = context;\n    }\n    if (pendingDestroy && blackHole) {\n      // here we have pendingDestroy.position, pendingDestroy.velocity, and blackHole.position\n      // game.playSpatialSound(pendingDestroy, blackHole);\n      // increase size of black hole\n      // console.log(blackHole.height, blackHole.width)\n      /*\n      game.updateEntity({\n        id: blackHole.id,\n        height: blackHole.height + 0.1,\n        width: blackHole.width + 0.1,\n        // radius: blackHole.radius + 0.1,\n      });\n      */\n    }\n    game.removeEntity(pendingDestroy.id);\n  });\n\n  // Function to apply gravitational force\n  function applyGravity(ent1, ent2, gravity, gameState) {\n    // TODO: refactor to use Entity.body component, removes game.bodyMap\n    var body = game.bodyMap[ent2.id];\n    if (!body) {\n      return;\n    }\n    var distance = Vector.sub(ent2.position, ent1.position);\n    var magnitude = Vector.magnitude(distance);\n    if (magnitude < 0.5) {\n      // This prevents extreme forces at very close distances\n      return;\n    }\n    distance = Vector.normalize(distance);\n    var force = gravity * ent1.mass * ent2.mass / (magnitude * magnitude);\n    var maxForce = 1; // Prevents excessively large forces\n    force = Math.min(force, maxForce);\n\n    // Apply the force towards the black hole\n    // TODO: add config flag for repulsion in addition to attraction\n    var repulsion = false;\n    if (typeof gameState.repulsion !== 'undefined') {\n      repulsion = gameState.repulsion;\n    }\n    var sign = repulsion ? 1 : -1;\n    game.applyForce(ent2.id, {\n      x: sign * distance.x * force,\n      y: sign * distance.y * force\n    });\n  }\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar SUTRAS = require('./index.js');\nconsole.log('SUTRAS', SUTRAS);\nmodule.exports = SUTRAS[\"default\"];\n\n},{\"./index.js\":8}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = demon;\nfunction demon(game) {\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: -60,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: 64,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedDemon', function (entity, gameState) {\n    console.log('entityTouchedDemon check', entity);\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (typeof entity.DEMON !== 'undefined') {\n        return true;\n      }\n    }\n  });\n\n  /*\n  rules.on('entityTouchedDemon', function (collision) {\n    //let demonEntity = collision.bodyA.type === 'DEMON' ? collision.bodyA : collision.bodyB;\n    // Define the scale factor for how much bigger the demon should get\n    const scaleFactor = 2.1; // For example, 10% bigger\n    // Increase the size of the demon\n    game.updateEntity({\n      id: demonEntity.id,\n      width: demonEntity.width * scaleFactor,\n      height: demonEntity.height * scaleFactor,\n      depth: demonEntity.depth * scaleFactor\n    });\n  });\n  */\n\n  return rules;\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fire;\nfunction fire(game) {\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: -80,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: 80,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedFire', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'FIRE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'FIRE') {\n        return true;\n      }\n    }\n  });\n  rules[\"if\"]('entityTouchedFire').then('playNote', {\n    note: 'F#4'\n  }).then('damageEntity');\n  rules.on('damageEntity', function (collision) {\n    var ent;\n    if (collision.bodyA.type === 'FIRE') {\n      ent = collision.bodyB;\n    } else {\n      ent = collision.bodyA;\n    }\n    // create a copy of the entity previous texture\n    // TODO: remove the createDefaultPlayer() call here\n    //       and instead have a game.on('player::death') event\n    //       listening in parent Sutra\n    var texture = ent.texture;\n    game.removeEntity(ent.id);\n    if (ent.type === 'PLAYER') {\n      game.currentPlayerId = null;\n      game.createDefaultPlayer({\n        texture: texture\n      });\n    }\n  });\n\n  // TODO: move pointerDown event into Sutra\n  game.on('pointerDown', function (entity, ev) {\n    if (entity.type === 'FIRE') {\n      game.playNote('G4');\n    }\n  });\n  return rules;\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fountSutra;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// fount.js - Marak Squires 2023\n// Sutra for Generating Units\nfunction fountSutra(game, context) {\n  var sprayConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var rules = game.createSutra();\n\n  // Default configuration for the Fount\n  var settings = _objectSpread({\n    unitType: 'PARTICLE',\n    // Type of unit to generate\n    collisionActive: false,\n    // Whether or not the unit will emit collisionActive actives ( performance hit )\n    texture: 'pixel',\n    // Texture for the unit\n    color: 0x00ff00,\n    // Color of the unit\n    unitSize: {\n      width: 4,\n      height: 4\n    },\n    // Size of the unit\n    sprayAngle: Math.PI / 8,\n    // Angle of the spray arc (in radians)\n    sprayWidth: Math.PI / 4,\n    // Width of the spray arc (in radians)\n    forceMagnitude: 0.5\n  }, sprayConfig);\n\n  // Function to create a unit\n  function createUnit(position) {\n    var rgbColor = settings.color;\n    // convert from int to rgb\n    rgbColor = [rgbColor >> 16 & 255, rgbColor >> 8 & 255, rgbColor & 255];\n    var rgbColorString = \"rgba(\".concat(rgbColor.join(','), \", 0.5)\"); // Adjust opacity as needed\n    return game.createEntity({\n      type: settings.unitType,\n      collisionActive: false,\n      collisionEnd: false,\n      collisionStart: false,\n      // texture: settings.texture,\n      height: settings.unitSize.height,\n      color: settings.color,\n      width: settings.unitSize.width,\n      position: position,\n      friction: 0.05,\n      frictionAir: 0.005,\n      frictionStatic: 0.25,\n      style: {\n        backgroundColor: rgbColorString\n      },\n      isSensor: true\n    });\n  }\n  function applySprayForce(unit) {\n    var baseAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : settings.sprayAngle;\n    var angleOffset = (Math.random() - 0.5) * settings.sprayWidth; // Random offset within a specified width\n    var angle = baseAngle + angleOffset;\n    var force = {\n      x: settings.forceMagnitude * Math.cos(angle),\n      y: settings.forceMagnitude * Math.sin(angle)\n    };\n    game.applyForce(unit.id, force);\n  }\n\n  // Rule for generating and spraying units\n  rules[\"if\"]('fountTick').then('fountSpray');\n  rules.addCondition('fountTick', function (entity, gameState) {\n    return entity.name === context.name && gameState.tick % 10 === 0;\n  });\n  rules.on('fountSpray', function (context, node, gameState) {\n    // Determine the position of the fount (can be context-dependent)\n    var fountPosition = typeof context !== 'undefined' ? context.position : {\n      x: 0,\n      y: 0\n    };\n    // Create a unit and apply force\n    var unit = createUnit(fountPosition);\n    applySprayForce(unit);\n  });\n  return rules;\n}\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = gameOfLife;\nfunction gameOfLife(game) {\n  var GRID_SIZE = 150; // Define the size of the grid\n  var CELL_SIZE = 5; // Size of each cell\n\n  // Initialize grid cells\n  for (var x = 0; x < GRID_SIZE; x += CELL_SIZE) {\n    for (var y = 0; y < GRID_SIZE; y += CELL_SIZE) {\n      game.createEntity({\n        type: 'LIFE_CELL',\n        //health: Math.random() < 0.5 ? 1 : 2, // 1 is alive, 2 is dead\n        health: 2,\n        position: {\n          x: x,\n          y: y\n        },\n        body: false,\n        width: CELL_SIZE,\n        height: CELL_SIZE\n      });\n    }\n  }\n  function initializeGlider(x, y, cellSize, game) {\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y - cellSize\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y - 2 * cellSize\n      }\n    });\n  }\n  initializeGlider(100, 100, CELL_SIZE, game);\n  var rules = game.createSutra();\n\n  // Rule for updating cell state\n  rules[\"if\"]('updateCellState').then('transitionCellState');\n  rules.addCondition('updateCellState', function (entity, gameState) {\n    return entity.type === 'LIFE_CELL' && gameState.tick % 10 === 0; // Update every 2 ticks\n  });\n  rules.on('transitionCellState', function (entity, node, gameState) {\n    var neighbors = getNeighbors(entity, node, gameState); // Function to get neighboring cells\n    var aliveNeighbors = neighbors.filter(function (neighbor) {\n      return neighbor.health === 1;\n    }).length;\n\n    // console.log(neighbors, aliveNeighbors)\n    // Game of Life rules\n    if (entity.health === 1 && (aliveNeighbors < 2 || aliveNeighbors > 3)) {\n      //entity.state = 'dead';\n      entity.health = 0;\n    } else if (entity.health === 2 && aliveNeighbors === 3) {\n      entity.health = 1;\n      //entity.state = 'alive';\n    }\n\n    // Update entity in the game\n    game.updateEntity({\n      id: entity.id,\n      health: entity.health,\n      style: {\n        backgroundColor: entity.health === 1 ? 'green' : 'black'\n      }\n    });\n  });\n  return rules;\n}\nfunction getNeighbors(cell, node, gameState) {\n  var gridSize = 150; // Define the size of the grid\n  var cellSize = 5; // Assuming each cell has a fixed size\n\n  var neighbors = [];\n  var neighborOffsets = [{\n    x: -cellSize,\n    y: -cellSize\n  }, {\n    x: 0,\n    y: -cellSize\n  }, {\n    x: cellSize,\n    y: -cellSize\n  }, {\n    x: -cellSize,\n    y: 0\n  }, /* Current Cell */{\n    x: cellSize,\n    y: 0\n  }, {\n    x: -cellSize,\n    y: cellSize\n  }, {\n    x: 0,\n    y: cellSize\n  }, {\n    x: cellSize,\n    y: cellSize\n  }];\n  gameState.ents.LIFE_CELL.forEach(function (otherCell) {\n    for (var _i = 0, _neighborOffsets = neighborOffsets; _i < _neighborOffsets.length; _i++) {\n      var offset = _neighborOffsets[_i];\n      var wrappedX = (cell.position.x + offset.x + gridSize) % gridSize;\n      var wrappedY = (cell.position.y + offset.y + gridSize) % gridSize;\n      if (otherCell.position.x === wrappedX && otherCell.position.y === wrappedY) {\n        neighbors.push(otherCell);\n        break; // Found neighbor, no need to check other offsets\n      }\n    }\n  });\n  return neighbors;\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexapod;\n// hexapod.js - Marak Squires 2023\nfunction hexapod(game) {\n  // create 22 hexapods\n  // start at 0,0 and make them in a circle with radius 80\n  var numberOfHexapods = 22;\n  var radius = 80;\n  for (var i = 0; i < numberOfHexapods; i++) {\n    // Calculate the angle for each hexapod\n    var angle = i / numberOfHexapods * 2 * Math.PI;\n\n    // Convert polar coordinates (angle, radius) to Cartesian coordinates (x, y)\n    var x = radius * Math.cos(angle);\n    var y = radius * Math.sin(angle);\n    game.createEntity({\n      type: 'HEXAPOD',\n      texture: 'demon',\n      width: 8,\n      height: 8,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n  }\n  var rules = game.createSutra();\n\n  // Define constant values for different forces and parameters\n  var ALIGNMENT_FORCE = 0.1;\n  var COHESION_FORCE = 0.4;\n  var SEPARATION_FORCE = 0.81;\n  var PERCEPTION_RADIUS = 1500;\n  var FIELD_OF_VIEW = 1500;\n\n  // hexapods grow on bullet hit\n  rules[\"if\"]('bulletHitHexapod').then('hexapodGrow');\n  rules.addCondition('bulletHitHexapod', function (entity, gameState) {\n    return entity.type === 'COLLISION' && entity.kind === 'START' && entity.HEXAPOD && entity.BULLET;\n  });\n  rules.on('hexapodGrow', function (collision) {\n    var hexapod = collision.HEXAPOD;\n    var style;\n    // at a certain size, invert the colors\n    if (hexapod.width > 16) {\n      style = {\n        // Define the animation name and duration\n        animation: 'pulse-invert 5s',\n        // Initial filter style\n        filter: 'invert(90%)'\n      };\n    }\n    // update entity size by 11%\n    game.updateEntity({\n      id: hexapod.id,\n      width: hexapod.width * 1.1,\n      height: hexapod.height * 1.1,\n      style: style\n    });\n  });\n\n  // hexpods think each tick\n  rules[\"if\"]('hexapodTick').then('hexapodThink');\n  rules.addCondition('hexapodTick', function (entity, gameState) {\n    return entity.type === 'HEXAPOD' && gameState.tick % 1 === 0;\n  });\n  rules.on('hexapodThink', function (entity, node, gameState) {\n    var hexapod = entity;\n    var hexapods = gameState.ents.HEXAPOD;\n    var alignment = {\n      x: 0,\n      y: 0\n    };\n    var cohesion = {\n      x: 0,\n      y: 0\n    };\n    var separation = {\n      x: 0,\n      y: 0\n    };\n    var planetAvoidance = {\n      x: 0,\n      y: 0\n    };\n\n    // Target movement implementation\n    var targetForce = {\n      x: 0,\n      y: 0\n    };\n    if (typeof gameState.currentPlayer !== 'undefined') {\n      if (gameState.currentPlayer) {\n        var target = gameState.currentPlayer.position;\n        var targetDirection = Vector.sub(target, hexapod.position);\n        targetForce = Vector.mult(Vector.normalize(targetDirection), COHESION_FORCE);\n      }\n    }\n\n    // Process each hexapod in the field of view\n    hexapods.forEach(function (otherHexapod) {\n      if (otherHexapod.id !== hexapod.id) {\n        var d = Vector.magnitude(Vector.sub(hexapod.position, otherHexapod.position));\n\n        // Alignment\n        if (d < PERCEPTION_RADIUS) {\n          alignment = Vector.add(alignment, otherHexapod.velocity);\n        }\n\n        // Cohesion\n        if (d < PERCEPTION_RADIUS) {\n          cohesion = Vector.add(cohesion, otherHexapod.position);\n        }\n\n        // Separation\n        if (d < hexapod.width + otherHexapod.width) {\n          var diff = Vector.sub(hexapod.position, otherHexapod.position);\n          separation = Vector.add(separation, Vector.div(diff, d * d)); // Weight by distance\n        }\n      }\n    });\n\n    // Average out alignment, cohesion, and separation\n    if (hexapods.length > 1) {\n      alignment = Vector.div(alignment, hexapods.length - 1);\n      cohesion = Vector.div(cohesion, hexapods.length - 1);\n      cohesion = Vector.sub(cohesion, hexapod.position);\n      separation = Vector.div(separation, hexapods.length - 1);\n    }\n    alignment = Vector.mult(Vector.normalize(alignment), ALIGNMENT_FORCE);\n    cohesion = Vector.mult(Vector.normalize(cohesion), COHESION_FORCE);\n    separation = Vector.mult(Vector.normalize(separation), SEPARATION_FORCE);\n\n    // Apply forces\n    var force = Vector.add(Vector.add(Vector.add(alignment, cohesion), separation), targetForce);\n    // Update hexapod position\n    var newPosition = Vector.add(hexapod.position, Vector.mult(force, 1));\n    newPosition.z = 1; // for now\n    game.updateEntity({\n      id: hexapod.id,\n      position: newPosition\n    });\n  });\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _demon = _interopRequireDefault(require(\"./demon.js\"));\nvar _fount = _interopRequireDefault(require(\"./fount.js\"));\nvar _gameOfLife = _interopRequireDefault(require(\"./game-of-life.js\"));\nvar _note = _interopRequireDefault(require(\"./note.js\"));\nvar _fire = _interopRequireDefault(require(\"./fire.js\"));\nvar _blackhole = _interopRequireDefault(require(\"./blackhole.js\"));\nvar _hexapod = _interopRequireDefault(require(\"./hexapod.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Sutras = {};\nSutras.demon = _demon[\"default\"];\nSutras.fount = _fount[\"default\"];\nSutras.blackhole = _blackhole[\"default\"];\nSutras.fire = _fire[\"default\"];\nSutras.gameOfLife = _gameOfLife[\"default\"];\nSutras.note = _note[\"default\"];\nSutras.hexapod = _hexapod[\"default\"];\nvar _default = exports[\"default\"] = Sutras;\n\n},{\"./blackhole.js\":1,\"./demon.js\":3,\"./fire.js\":4,\"./fount.js\":5,\"./game-of-life.js\":6,\"./hexapod.js\":7,\"./note.js\":9}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = note;\nfunction note(game) {\n  // if touch note play sound\n  game.createEntity({\n    type: 'NOTE',\n    color: 0xccff00,\n    width: 32,\n    height: 32,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: 0,\n      y: 0,\n      z: 1\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedNote', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'NOTE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'NOTE') {\n        return true;\n      }\n    }\n  });\n\n  // TODO: move these events into a Sutra\n  game.on('pointerDown', function (entity) {\n    if (entity.type === 'NOTE') {\n      game.playNote(entity.kind);\n    }\n    if (entity.type === 'DRUM') {\n      game.playDrum(entity.kind);\n    }\n  });\n}\n\n},{}]},{},[2])(2)\n});\n"],"names":["f","exports","module","define","amd","window","global","self","this","SUTRAS","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","game","context","rules","createSutra","on","entityData","arguments","undefined","position","x","y","createEntity","type","texture","isStatic","isSensor","width","height","mass","applyGravity","ent1","ent2","gravity","gameState","distance","sign","bodyMap","id","Vector","sub","magnitude","normalize","force","Math","min","repulsion","applyForce","addCondition","entity","tick","then","node","keys","ents","_","forEach","eId","BLACK_HOLE","blackHole","kind","collision","pendingDestroy","bodyA","bodyB","removeEntity","add","v1","v2","mult","v","factor","div","sqrt","mag","2","console","log","./index.js","3","depth","z","DEMON","4","sheet","sprite","note","ent","currentPlayerId","createDefaultPlayer","ev","playNote","5","_typeof","Symbol","iterator","constructor","prototype","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","sprayConfig","settings","obj","key","toPrimitive","String","Number","TypeError","configurable","writable","getOwnPropertyDescriptors","defineProperties","unitType","collisionActive","color","unitSize","sprayAngle","PI","sprayWidth","forceMagnitude","name","rgbColor","fountPosition","rgbColorString","concat","join","unit","angle","random","cos","sin","collisionEnd","collisionStart","friction","frictionAir","frictionStatic","style","backgroundColor","6","health","body","initializeGlider","cellSize","cell","neighbors","neighborOffsets","LIFE_CELL","otherCell","_i","_neighborOffsets","offset","wrappedX","wrappedY","aliveNeighbors","neighbor","updateEntity","7","HEXAPOD","BULLET","hexapod","animation","hexapods","alignment","cohesion","separation","targetForce","currentPlayer","target","targetDirection","otherHexapod","d","velocity","diff","newPosition","8","_demon","_interopRequireDefault","_fount","_gameOfLife","_note","_fire","_blackhole","_hexapod","__esModule","default","Sutras","demon","fount","blackhole","fire","gameOfLife","./blackhole.js","./demon.js","./fire.js","./fount.js","./game-of-life.js","./hexapod.js","./note.js","9","playDrum"],"mappings":"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"}