{"version":3,"sourceRoot":"../","sources":["./dist/sutras.mantra.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SUTRAS = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = blackHoleSutra;\n// blackhole.js - Marak Squires 2023\nfunction blackHoleSutra(game, context) {\n  var rules = game.createSutra();\n\n  // Remark: Note namspace of sutraname::methodname\n  //         Mantra runs a single Sutra tree which all entities are bound to\n  //         This requires a unique namespace for each Sutra\n  rules.on('blackhole::create', function () {\n    var entityData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    // Create the Black Hole entity\n    var blackHole = game.createEntity({\n      type: 'BLACK_HOLE',\n      texture: 'fire',\n      isStatic: true,\n      isSensor: true,\n      width: 4,\n      height: 4,\n      //radius: 20,\n      position: {\n        x: entityData.position.x,\n        y: entityData.position.y\n      },\n      mass: 100\n    });\n  });\n\n  // Define the gravitational constant\n  var GRAVITATIONAL_CONSTANT = 0.01; // Adjust as needed for gameplay\n\n  rules.addCondition('gravityTick', function (entity, gameState) {\n    return gameState.tick % 5 === 0;\n  });\n  rules[\"if\"]('gravityTick').then('applyGravity');\n  rules.on('applyGravity', function (entityData, node, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      Object.keys(gameState.ents._).forEach(function (eId) {\n        var entity = gameState.ents._[eId];\n        if (entity.type !== 'BLACK_HOLE') {\n          applyGravity(context, entity, GRAVITATIONAL_CONSTANT, gameState);\n        }\n      });\n      return;\n    }\n    if (gameState.ents.BLACK_HOLE) {\n      gameState.ents.BLACK_HOLE.forEach(function (blackHole) {\n        Object.keys(gameState.ents._).forEach(function (eId) {\n          var entity = gameState.ents._[eId];\n          if (entity.type !== 'BLACK_HOLE') {\n            applyGravity(blackHole, entity, GRAVITATIONAL_CONSTANT, gameState);\n          }\n        });\n      });\n    }\n  });\n  rules[\"if\"]('entTouchedBlackhole').then('blackHoleCollision');\n  rules.addCondition('entTouchedBlackhole', function (entity, gameState) {\n    // check if this running locally on a context or globally on all BLACK_HOLE entities\n    if (typeof context !== 'undefined') {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity[context.type];\n    } else {\n      return entity.type === 'COLLISION' && entity.kind === 'START' && entity.BLACK_HOLE;\n    }\n  });\n  rules.on('blackHoleCollision', function (collision, node, gameState) {\n    var pendingDestroy = collision.bodyA;\n    var blackHole = collision.bodyB;\n    if (collision.bodyA.type === 'BLACK_HOLE') {\n      pendingDestroy = collision.bodyB;\n      blackHole = collision.bodyA;\n    }\n    if (typeof context !== 'undefined') {\n      if (collision.bodyA.type === context.type) {\n        pendingDestroy = collision.bodyB;\n      } else {\n        pendingDestroy = collision.bodyA;\n      }\n      blackHole = context;\n    }\n    if (blackHole) {\n      // increase size of black hole\n      // console.log(blackHole.height, blackHole.width)\n      /*\n      game.updateEntity({\n        id: blackHole.id,\n        height: blackHole.height + 0.1,\n        width: blackHole.width + 0.1,\n        // radius: blackHole.radius + 0.1,\n      });\n      */\n    }\n    game.removeEntity(pendingDestroy.id);\n  });\n\n  // Function to apply gravitational force\n  function applyGravity(body1, body2, gravity, gameState) {\n    var distance = Vector.sub(body2.position, body1.position);\n    var magnitude = Vector.magnitude(distance);\n    if (magnitude < 0.5) {\n      // This prevents extreme forces at very close distances\n      return;\n    }\n    distance = Vector.normalize(distance);\n    var force = gravity * body1.mass * body2.mass / (magnitude * magnitude);\n    var maxForce = 1; // Prevents excessively large forces\n    force = Math.min(force, maxForce);\n\n    // Apply the force towards the black hole\n    // TODO: add config flag for repulsion in addition to attraction\n    var repulsion = false;\n    if (typeof gameState.repulsion !== 'undefined') {\n      repulsion = gameState.repulsion;\n    }\n    var sign = repulsion ? 1 : -1;\n    game.applyForce(body2.id, {\n      x: sign * distance.x * force,\n      y: sign * distance.y * force\n    });\n  }\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar SUTRAS = require('./index.js');\nconsole.log('SUTRAS', SUTRAS);\nmodule.exports = SUTRAS[\"default\"];\n\n},{\"./index.js\":8}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = demon;\nfunction demon(game) {\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: -60,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'DEMON',\n    texture: 'demon',\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 8,\n    height: 8,\n    depth: 64,\n    position: {\n      x: 64,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedDemon', function (entity, gameState) {\n    console.log('entityTouchedDemon check', entity);\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (typeof entity.DEMON !== 'undefined') {\n        return true;\n      }\n    }\n  });\n\n  /*\n  rules.on('entityTouchedDemon', function (collision) {\n    //let demonEntity = collision.bodyA.type === 'DEMON' ? collision.bodyA : collision.bodyB;\n    // Define the scale factor for how much bigger the demon should get\n    const scaleFactor = 2.1; // For example, 10% bigger\n    // Increase the size of the demon\n    game.updateEntity({\n      id: demonEntity.id,\n      width: demonEntity.width * scaleFactor,\n      height: demonEntity.height * scaleFactor,\n      depth: demonEntity.depth * scaleFactor\n    });\n  });\n  */\n\n  return rules;\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fire;\nfunction fire(game) {\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: -80,\n      y: -60,\n      z: 32\n    }\n  });\n  game.createEntity({\n    type: 'FIRE',\n    texture: {\n      sheet: 'loz_spritesheet',\n      sprite: 'fire'\n      // frame: 0 // TODO: support single frame / bypass animation of array\n    },\n    //texture: 'fire',\n    //color: 0xff0000,\n    width: 16,\n    height: 16,\n    depth: 64,\n    isStatic: true,\n    position: {\n      x: 80,\n      y: -60,\n      z: 32\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedFire', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'FIRE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'FIRE') {\n        return true;\n      }\n    }\n  });\n  rules[\"if\"]('entityTouchedFire').then('playNote', {\n    note: 'F#4'\n  }).then('damageEntity');\n  rules.on('damageEntity', function (collision) {\n    var ent;\n    if (collision.bodyA.type === 'FIRE') {\n      ent = collision.bodyB;\n    } else {\n      ent = collision.bodyA;\n    }\n    // create a copy of the entity previous texture\n    // TODO: remove the createDefaultPlayer() call here\n    //       and instead have a game.on('player::death') event\n    //       listening in parent Sutra\n    var texture = ent.texture;\n    game.removeEntity(ent.id);\n    if (ent.type === 'PLAYER') {\n      game.currentPlayerId = null;\n      game.createDefaultPlayer({\n        texture: texture\n      });\n    }\n  });\n\n  // TODO: move pointerDown event into Sutra\n  game.on('pointerDown', function (entity, ev) {\n    if (entity.type === 'FIRE') {\n      game.playNote('G4');\n    }\n  });\n  return rules;\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fountSutra;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// fount.js - Marak Squires 2023\n// Sutra for Generating Units\nfunction fountSutra(game, context) {\n  var sprayConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var rules = game.createSutra();\n\n  // Default configuration for the Fount\n  var settings = _objectSpread({\n    unitType: 'PARTICLE',\n    // Type of unit to generate\n    collisionActive: false,\n    // Whether or not the unit will emit collisionActive actives ( performance hit )\n    texture: 'pixel',\n    // Texture for the unit\n    color: 0x00ff00,\n    // Color of the unit\n    unitSize: {\n      width: 4,\n      height: 4\n    },\n    // Size of the unit\n    sprayAngle: Math.PI / 8,\n    // Angle of the spray arc (in radians)\n    sprayWidth: Math.PI / 4,\n    // Width of the spray arc (in radians)\n    forceMagnitude: 0.5\n  }, sprayConfig);\n\n  // Function to create a unit\n  function createUnit(position) {\n    var rgbColor = settings.color;\n    // convert from int to rgb\n    rgbColor = [rgbColor >> 16 & 255, rgbColor >> 8 & 255, rgbColor & 255];\n    var rgbColorString = \"rgba(\".concat(rgbColor.join(','), \", 0.5)\"); // Adjust opacity as needed\n    return game.createEntity({\n      type: settings.unitType,\n      collisionActive: false,\n      collisionEnd: false,\n      // texture: settings.texture,\n      height: settings.unitSize.height,\n      color: settings.color,\n      width: settings.unitSize.width,\n      position: position,\n      friction: 0.05,\n      frictionAir: 0.005,\n      frictionStatic: 0.25,\n      style: {\n        backgroundColor: rgbColorString\n      },\n      isSensor: true\n    });\n  }\n  function applySprayForce(unit) {\n    var baseAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : settings.sprayAngle;\n    var angleOffset = (Math.random() - 0.5) * settings.sprayWidth; // Random offset within a specified width\n    var angle = baseAngle + angleOffset;\n    var force = {\n      x: settings.forceMagnitude * Math.cos(angle),\n      y: settings.forceMagnitude * Math.sin(angle)\n    };\n    game.applyForce(unit.id, force);\n  }\n\n  // Rule for generating and spraying units\n  rules[\"if\"]('fountTick').then('fountSpray');\n  rules.addCondition('fountTick', function (entity, gameState) {\n    return entity.name === context.name && gameState.tick % 10 === 0;\n  });\n  rules.on('fountSpray', function (context, node, gameState) {\n    // Determine the position of the fount (can be context-dependent)\n    var fountPosition = typeof context !== 'undefined' ? context.position : {\n      x: 0,\n      y: 0\n    };\n    // Create a unit and apply force\n    var unit = createUnit(fountPosition);\n    applySprayForce(unit);\n  });\n  return rules;\n}\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = gameOfLife;\nfunction gameOfLife(game) {\n  var GRID_SIZE = 150; // Define the size of the grid\n  var CELL_SIZE = 5; // Size of each cell\n\n  // Initialize grid cells\n  for (var x = 0; x < GRID_SIZE; x += CELL_SIZE) {\n    for (var y = 0; y < GRID_SIZE; y += CELL_SIZE) {\n      game.createEntity({\n        type: 'LIFE_CELL',\n        //health: Math.random() < 0.5 ? 1 : 2, // 1 is alive, 2 is dead\n        health: 2,\n        position: {\n          x: x,\n          y: y\n        },\n        body: false,\n        width: CELL_SIZE,\n        height: CELL_SIZE\n      });\n    }\n  }\n  function initializeGlider(x, y, cellSize, game) {\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + 2 * cellSize,\n        y: y - cellSize\n      }\n    });\n    game.createEntity({\n      type: 'LIFE_CELL',\n      width: cellSize,\n      height: cellSize,\n      body: false,\n      health: 1,\n      position: {\n        x: x + cellSize,\n        y: y - 2 * cellSize\n      }\n    });\n  }\n  initializeGlider(100, 100, CELL_SIZE, game);\n  var rules = game.createSutra();\n\n  // Rule for updating cell state\n  rules[\"if\"]('updateCellState').then('transitionCellState');\n  rules.addCondition('updateCellState', function (entity, gameState) {\n    return entity.type === 'LIFE_CELL' && gameState.tick % 10 === 0; // Update every 2 ticks\n  });\n  rules.on('transitionCellState', function (entity, node, gameState) {\n    var neighbors = getNeighbors(entity, node, gameState); // Function to get neighboring cells\n    var aliveNeighbors = neighbors.filter(function (neighbor) {\n      return neighbor.health === 1;\n    }).length;\n\n    // console.log(neighbors, aliveNeighbors)\n    // Game of Life rules\n    if (entity.health === 1 && (aliveNeighbors < 2 || aliveNeighbors > 3)) {\n      //entity.state = 'dead';\n      entity.health = 0;\n    } else if (entity.health === 2 && aliveNeighbors === 3) {\n      entity.health = 1;\n      //entity.state = 'alive';\n    }\n\n    // Update entity in the game\n    game.updateEntity({\n      id: entity.id,\n      health: entity.health,\n      style: {\n        backgroundColor: entity.health === 1 ? 'green' : 'black'\n      }\n    });\n  });\n  return rules;\n}\nfunction getNeighbors(cell, node, gameState) {\n  var gridSize = 150; // Define the size of the grid\n  var cellSize = 5; // Assuming each cell has a fixed size\n\n  var neighbors = [];\n  var neighborOffsets = [{\n    x: -cellSize,\n    y: -cellSize\n  }, {\n    x: 0,\n    y: -cellSize\n  }, {\n    x: cellSize,\n    y: -cellSize\n  }, {\n    x: -cellSize,\n    y: 0\n  }, /* Current Cell */{\n    x: cellSize,\n    y: 0\n  }, {\n    x: -cellSize,\n    y: cellSize\n  }, {\n    x: 0,\n    y: cellSize\n  }, {\n    x: cellSize,\n    y: cellSize\n  }];\n  gameState.ents.LIFE_CELL.forEach(function (otherCell) {\n    for (var _i = 0, _neighborOffsets = neighborOffsets; _i < _neighborOffsets.length; _i++) {\n      var offset = _neighborOffsets[_i];\n      var wrappedX = (cell.position.x + offset.x + gridSize) % gridSize;\n      var wrappedY = (cell.position.y + offset.y + gridSize) % gridSize;\n      if (otherCell.position.x === wrappedX && otherCell.position.y === wrappedY) {\n        neighbors.push(otherCell);\n        break; // Found neighbor, no need to check other offsets\n      }\n    }\n  });\n  return neighbors;\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexapod;\n// hexapod.js - Marak Squires 2023\nfunction hexapod(game) {\n  // create 22 hexapods\n  // start at 0,0 and make them in a circle with radius 80\n  var numberOfHexapods = 22;\n  var radius = 80;\n  for (var i = 0; i < numberOfHexapods; i++) {\n    // Calculate the angle for each hexapod\n    var angle = i / numberOfHexapods * 2 * Math.PI;\n\n    // Convert polar coordinates (angle, radius) to Cartesian coordinates (x, y)\n    var x = radius * Math.cos(angle);\n    var y = radius * Math.sin(angle);\n    game.createEntity({\n      type: 'HEXAPOD',\n      texture: 'demon',\n      width: 8,\n      height: 8,\n      position: {\n        x: x,\n        y: y\n      }\n    });\n  }\n  var rules = game.createSutra();\n\n  // Define constant values for different forces and parameters\n  var ALIGNMENT_FORCE = 0.1;\n  var COHESION_FORCE = 0.4;\n  var SEPARATION_FORCE = 0.81;\n  var PERCEPTION_RADIUS = 1500;\n  var FIELD_OF_VIEW = 1500;\n\n  // hexapods grow on bullet hit\n  rules[\"if\"]('bulletHitHexapod').then('hexapodGrow');\n  rules.addCondition('bulletHitHexapod', function (entity, gameState) {\n    return entity.type === 'COLLISION' && entity.kind === 'START' && entity.HEXAPOD && entity.BULLET;\n  });\n  rules.on('hexapodGrow', function (collision) {\n    var hexapod = collision.HEXAPOD;\n    // update entity size by 11%\n    game.updateEntity({\n      id: hexapod.id,\n      width: hexapod.width * 1.1,\n      height: hexapod.height * 1.1\n    });\n  });\n\n  // hexpods think each tick\n  rules[\"if\"]('hexapodTick').then('hexapodThink');\n  rules.addCondition('hexapodTick', function (entity, gameState) {\n    return entity.type === 'HEXAPOD' && gameState.tick % 1 === 0;\n  });\n  rules.on('hexapodThink', function (entity, node, gameState) {\n    var hexapod = entity;\n    var hexapods = gameState.ents.HEXAPOD;\n    var alignment = {\n      x: 0,\n      y: 0\n    };\n    var cohesion = {\n      x: 0,\n      y: 0\n    };\n    var separation = {\n      x: 0,\n      y: 0\n    };\n    var planetAvoidance = {\n      x: 0,\n      y: 0\n    };\n\n    // Target movement implementation\n    var targetForce = {\n      x: 0,\n      y: 0\n    };\n    if (typeof gameState.currentPlayer !== 'undefined') {\n      if (gameState.currentPlayer) {\n        var target = gameState.currentPlayer.position;\n        var targetDirection = Vector.sub(target, hexapod.position);\n        targetForce = Vector.mult(Vector.normalize(targetDirection), COHESION_FORCE);\n      }\n    }\n\n    // Process each hexapod in the field of view\n    hexapods.forEach(function (otherHexapod) {\n      if (otherHexapod.id !== hexapod.id) {\n        var d = Vector.magnitude(Vector.sub(hexapod.position, otherHexapod.position));\n\n        // Alignment\n        if (d < PERCEPTION_RADIUS) {\n          alignment = Vector.add(alignment, otherHexapod.velocity);\n        }\n\n        // Cohesion\n        if (d < PERCEPTION_RADIUS) {\n          cohesion = Vector.add(cohesion, otherHexapod.position);\n        }\n\n        // Separation\n        if (d < hexapod.width + otherHexapod.width) {\n          var diff = Vector.sub(hexapod.position, otherHexapod.position);\n          separation = Vector.add(separation, Vector.div(diff, d * d)); // Weight by distance\n        }\n      }\n    });\n\n    // Average out alignment, cohesion, and separation\n    if (hexapods.length > 1) {\n      alignment = Vector.div(alignment, hexapods.length - 1);\n      cohesion = Vector.div(cohesion, hexapods.length - 1);\n      cohesion = Vector.sub(cohesion, hexapod.position);\n      separation = Vector.div(separation, hexapods.length - 1);\n    }\n    alignment = Vector.mult(Vector.normalize(alignment), ALIGNMENT_FORCE);\n    cohesion = Vector.mult(Vector.normalize(cohesion), COHESION_FORCE);\n    separation = Vector.mult(Vector.normalize(separation), SEPARATION_FORCE);\n\n    // Apply forces\n    var force = Vector.add(Vector.add(Vector.add(alignment, cohesion), separation), targetForce);\n    // Update hexapod position\n    var newPosition = Vector.add(hexapod.position, Vector.mult(force, 1));\n    newPosition.z = 1; // for now\n    game.updateEntity({\n      id: hexapod.id,\n      position: newPosition\n    });\n  });\n  return rules;\n}\n\n// Basic vector operations\nvar Vector = {\n  add: function add(v1, v2) {\n    return {\n      x: v1.x + v2.x,\n      y: v1.y + v2.y\n    };\n  },\n  sub: function sub(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  mult: function mult(v, factor) {\n    return {\n      x: v.x * factor,\n      y: v.y * factor\n    };\n  },\n  div: function div(v, factor) {\n    return {\n      x: v.x / factor,\n      y: v.y / factor\n    };\n  },\n  magnitude: function magnitude(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  normalize: function normalize(v) {\n    var mag = Vector.magnitude(v);\n    return mag > 0 ? Vector.div(v, mag) : {\n      x: 0,\n      y: 0\n    };\n  }\n};\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _demon = _interopRequireDefault(require(\"./demon.js\"));\nvar _fount = _interopRequireDefault(require(\"./fount.js\"));\nvar _gameOfLife = _interopRequireDefault(require(\"./game-of-life.js\"));\nvar _note = _interopRequireDefault(require(\"./note.js\"));\nvar _fire = _interopRequireDefault(require(\"./fire.js\"));\nvar _blackhole = _interopRequireDefault(require(\"./blackhole.js\"));\nvar _hexapod = _interopRequireDefault(require(\"./hexapod.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Sutras = {};\nSutras.demon = _demon[\"default\"];\nSutras.fount = _fount[\"default\"];\nSutras.blackhole = _blackhole[\"default\"];\nSutras.fire = _fire[\"default\"];\nSutras.gameOfLife = _gameOfLife[\"default\"];\nSutras.note = _note[\"default\"];\nSutras.hexapod = _hexapod[\"default\"];\nvar _default = exports[\"default\"] = Sutras;\n\n},{\"./blackhole.js\":1,\"./demon.js\":3,\"./fire.js\":4,\"./fount.js\":5,\"./game-of-life.js\":6,\"./hexapod.js\":7,\"./note.js\":9}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = note;\nfunction note(game) {\n  // if touch note play sound\n  game.createEntity({\n    type: 'NOTE',\n    color: 0xccff00,\n    width: 32,\n    height: 32,\n    depth: 16,\n    isStatic: true,\n    position: {\n      x: 0,\n      y: 0,\n      z: 1\n    }\n  });\n  var rules = game.createSutra();\n  rules.addCondition('entityTouchedNote', function (entity, gameState) {\n    if (entity.type === 'COLLISION' && entity.kind === 'START') {\n      if (entity.bodyA.type === 'NOTE') {\n        return true;\n      }\n      if (entity.bodyB.type === 'NOTE') {\n        return true;\n      }\n    }\n  });\n\n  // TODO: move these events into a Sutra\n  game.on('pointerDown', function (entity) {\n    if (entity.type === 'NOTE') {\n      game.playNote(entity.kind);\n    }\n    if (entity.type === 'DRUM') {\n      game.playDrum(entity.kind);\n    }\n  });\n}\n\n},{}]},{},[2])(2)\n});\n"],"names":["f","exports","module","define","amd","window","global","self","this","SUTRAS","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","game","context","rules","createSutra","on","entityData","arguments","undefined","position","x","y","createEntity","type","texture","isStatic","isSensor","width","height","mass","applyGravity","body1","body2","gravity","gameState","distance","Vector","sub","magnitude","normalize","force","Math","min","repulsion","sign","applyForce","id","addCondition","entity","tick","then","node","keys","ents","_","forEach","eId","BLACK_HOLE","blackHole","kind","collision","pendingDestroy","bodyA","bodyB","removeEntity","add","v1","v2","mult","v","factor","div","sqrt","mag","2","console","log","./index.js","3","depth","z","DEMON","4","sheet","sprite","note","ent","currentPlayerId","createDefaultPlayer","ev","playNote","5","_typeof","Symbol","iterator","constructor","prototype","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","sprayConfig","settings","obj","key","toPrimitive","String","Number","TypeError","configurable","writable","getOwnPropertyDescriptors","defineProperties","unitType","collisionActive","color","unitSize","sprayAngle","PI","sprayWidth","forceMagnitude","name","rgbColor","fountPosition","rgbColorString","concat","join","unit","angle","random","cos","sin","collisionEnd","friction","frictionAir","frictionStatic","style","backgroundColor","6","health","body","initializeGlider","cellSize","cell","neighbors","neighborOffsets","LIFE_CELL","otherCell","_i","_neighborOffsets","offset","wrappedX","wrappedY","aliveNeighbors","neighbor","updateEntity","7","HEXAPOD","BULLET","hexapod","hexapods","alignment","cohesion","separation","targetForce","currentPlayer","target","targetDirection","otherHexapod","d","velocity","diff","newPosition","8","_demon","_interopRequireDefault","_fount","_gameOfLife","_note","_fire","_blackhole","_hexapod","__esModule","default","Sutras","demon","fount","blackhole","fire","gameOfLife","./blackhole.js","./demon.js","./fire.js","./fount.js","./game-of-life.js","./hexapod.js","./note.js","9","playDrum"],"mappings":"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"}